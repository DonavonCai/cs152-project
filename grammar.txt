PROGRAM -> epsilon | FUNCTIONS

FUNCTIONS -> FUNCTION FUNCTIONS

FUNCTION -> function identifier ; beginparams DECLARATIONS endparams beginlocals DECLARATIONS endlocals beginbody STATEMENTS endbody

DECLARATIONS -> DECLARATION ; | DECLARATION ; DECLARATIONS | eps

STATEMENTS -> STATEMENT ; | STATEMENT ; MULTIPLE_STATEMENTS

VARS -> VAR | VAR , VARS

DECLARATION -> identifier , DECLARATION | identifier : integer | identifier : array ARRAY of integer| identifier : array ARRAY ARRAY of integer

ARRAY -> [ number ]

STATEMENT -> VAR := EXPRESSION | 
if BOOL-EXP then STATEMENTS endif | if BOOL-EXPR then STATEMENTS else STATEMENTS endif | 
while BOOL-EXPR beginloop STATEMENTS endloop | 
do beginloop STATEMENTS endloop while BOOL-EXPR | 
for VAR := number ; BOOL-EXPR ; VAR := EXPRESSION beginloop STATEMENTS endloop | 
read VARS | 
write VARS | 
continue | 
return EXPRESSION

BOOL-EXPR -> RELATION-AND-EXPR | RELATION-AND-EXPR OR-MULTIPLE-REL-AND-EXPR

OR-MULTIPLE-REL-AND-EXPR -> or RELATION-AND-EXPR | or RELATION-AND-EXPR OR-MULTIPLE-REL-AND-EXPR

RELATION-AND-EXPR -> RELATION-EXPR | RELATION-EXPR AND-MULTIPLE-REL-EXPR

AND-MULTIPLE-REL-EXPR -> and RELATION-EXPR | and RELATION-EXPR AND-MULTIPLE-REL-EXPR

RELATION-EXPR -> not EXPR-TO-EVAL | EXPR-TO-EVAL

EXPR-TO-EVAL -> EXPRESSION COMP EXPRESSION | true | false | ( BOOL-EXPR )

COMP -> == | <> | < | > | <= | >=

EXPRESSION -> MULTIPLICATIVE-EXPR | PLUS-MIN-MULT-EXPR

PLUS-MIN-MULT-EXPR -> + MULTIPLICATIVE-EXPR | + MULTIPLICATIVE-EXPR PLUS-MIN-MULT-EXPR | - MULTIPLICATIVE-EXPR | - MULTIPLICATIVE-EXPR PLUS-MIN-MULT-EXPR

MULTIPLICATIVE-EXPR -> TERM | MULT-OP-TERMS

MULT-OP-TERMS -> * TERM | / TERM | % TERM | * TERM MULT-OP-TERMS | / TERM MULT-OP-TERMS | % TERM MULT-OP-TERMS

TERM -> - VAR-NUM-EXPR | VAR-NUM-EXPR | ID-EXPR

VAR-NUM-EXPR -> VAR | number | ( EXPRESSION )

ID-EXPR -> identifier ( EXPRESSIONS )

EXPRESSIONS -> EXPRESSION | EXPRESSION ADDITIONAL-EXPRESSIONS | eps

ADDITIONAL-EXPRESSIONS -> , EXPRESSION | , EXPRESSION ADDITIONAL-EXPRESSIONS

VAR -> identifier | identifier BRACE-EXPR | identifier BRACE-EXPR BRACE-EXPR

BRACE-EXPR -> [ EXPRESSION ]

