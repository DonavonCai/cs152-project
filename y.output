Grammar

    0 $accept: program $end

    1 program: functions

    2 functions: %empty
    3          | function functions

    4 function: FUNCTION IDENT SEMICOLON BEGINPARAMS declarations ENDPARAMS BEGINLOCALS declarations ENDLOCALS BEGINBODY statements ENDBODY

    5 declarations: %empty
    6             | declaration SEMICOLON declarations

    7 declaration: ids COLON INT
    8            | ids COLON ARRAY arr OF INT
    9            | ids COLON ARRAY arr arr OF INT

   10 arr: LBRACKET NUMBER RBRACKET

   11 ids: IDENT
   12    | IDENT COMMA ids

   13 statements: statement SEMICOLON
   14           | statement SEMICOLON statements

   15 statement: var ASSIGN expression
   16          | IF bool-expr THEN statements ENDIF
   17          | IF bool-expr THEN statements ELSE statements ENDIF
   18          | WHILE bool-expr BEGINLOOP statements ENDLOOP
   19          | DO BEGINLOOP statements ENDLOOP WHILE bool-expr
   20          | FOR var ASSIGN NUMBER SEMICOLON bool-expr SEMICOLON var ASSIGN expression BEGINLOOP statements ENDLOOP
   21          | READ vars
   22          | WRITE vars
   23          | CONTINUE
   24          | RETURN expression

   25 bool-expr: relation-and-expr
   26          | relation-and-expr OR bool-expr

   27 relation-and-expr: relation-expr
   28                  | relation-expr AND relation-and-expr

   29 relation-expr: optional-not expression comp expression
   30              | optional-not TRUE
   31              | optional-not FALSE
   32              | optional-not LPAREN bool-expr RPAREN

   33 $@1: %empty

   34 optional-not: $@1 NOT

   35 comp: EQ
   36     | NEQ
   37     | LT
   38     | GT
   39     | LE
   40     | GE

   41 expression: multiplicative-expr
   42           | multiplicative-expr PLUS expression
   43           | multiplicative-expr MINUS expression

   44 multiplicative-expr: term
   45                    | term MULT multiplicative-expr
   46                    | term DIV multiplicative-expr
   47                    | term MOD multiplicative-expr

   48 term: num-term
   49     | id-term

   50 num-term: var
   51         | MINUS var
   52         | NUMBER
   53         | MINUS NUMBER
   54         | LPAREN expression RPAREN
   55         | MINUS LPAREN expression RPAREN

   56 id-term: IDENT LPAREN expressions RPAREN

   57 expressions: %empty
   58            | nonempty-expressions

   59 nonempty-expressions: expression
   60                     | expression COMMA nonempty-expressions

   61 vars: var
   62     | var COMMA vars

   63 var: IDENT
   64    | IDENT brack-expr
   65    | IDENT brack-expr brack-expr

   66 brack-expr: LBRACKET expression RBRACKET


Terminals, with rules where they appear

$end (0) 0
error (256)
FUNCTION (258) 4
SEMICOLON (259) 4 6 13 14 20
IDENT (260) 4 11 12 56 63 64 65
NUMBER (261) 10 20 52 53
BEGINPARAMS (262) 4
ENDPARAMS (263) 4
BEGINLOCALS (264) 4
ENDLOCALS (265) 4
BEGINBODY (266) 4
ENDBODY (267) 4
COMMA (268) 12 60 62
COLON (269) 7 8 9
INT (270) 7 8 9
ARRAY (271) 8 9
LBRACKET (272) 10 66
RBRACKET (273) 10 66
OF (274) 8 9
ASSIGN (275) 15 20
IF (276) 16 17
THEN (277) 16 17
ELSE (278) 17
ENDIF (279) 16 17
WHILE (280) 18 19
BEGINLOOP (281) 18 19 20
ENDLOOP (282) 18 19 20
DO (283) 19
FOR (284) 20
READ (285) 21
WRITE (286) 22
CONTINUE (287) 23
RETURN (288) 24
OR (289) 26
AND (290) 28
NOT (291) 34
TRUE (292) 30
FALSE (293) 31
LPAREN (294) 32 54 55 56
RPAREN (295) 32 54 55 56
EQ (296) 35
NEQ (297) 36
LE (298) 39
GE (299) 40
LT (300) 37
GT (301) 38
PLUS (302) 42
MINUS (303) 43 51 53 55
MULT (304) 45
DIV (305) 46
MOD (306) 47


Nonterminals, with rules where they appear

$accept (52)
    on left: 0
program (53)
    on left: 1, on right: 0
functions (54)
    on left: 2 3, on right: 1 3
function (55)
    on left: 4, on right: 3
declarations (56)
    on left: 5 6, on right: 4 6
declaration (57)
    on left: 7 8 9, on right: 6
arr (58)
    on left: 10, on right: 8 9
ids (59)
    on left: 11 12, on right: 7 8 9 12
statements (60)
    on left: 13 14, on right: 4 14 16 17 18 19 20
statement (61)
    on left: 15 16 17 18 19 20 21 22 23 24, on right: 13 14
bool-expr (62)
    on left: 25 26, on right: 16 17 18 19 20 26 32
relation-and-expr (63)
    on left: 27 28, on right: 25 26 28
relation-expr (64)
    on left: 29 30 31 32, on right: 27 28
optional-not (65)
    on left: 34, on right: 29 30 31 32
$@1 (66)
    on left: 33, on right: 34
comp (67)
    on left: 35 36 37 38 39 40, on right: 29
expression (68)
    on left: 41 42 43, on right: 15 20 24 29 42 43 54 55 59 60 66
multiplicative-expr (69)
    on left: 44 45 46 47, on right: 41 42 43 45 46 47
term (70)
    on left: 48 49, on right: 44 45 46 47
num-term (71)
    on left: 50 51 52 53 54 55, on right: 48
id-term (72)
    on left: 56, on right: 49
expressions (73)
    on left: 57 58, on right: 56
nonempty-expressions (74)
    on left: 59 60, on right: 58 60
vars (75)
    on left: 61 62, on right: 21 22 62
var (76)
    on left: 63 64 65, on right: 15 20 50 51 61 62
brack-expr (77)
    on left: 66, on right: 64 65


State 0

    0 $accept: . program $end

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 2 (functions)

    program    go to state 2
    functions  go to state 3
    function   go to state 4


State 1

    4 function: FUNCTION . IDENT SEMICOLON BEGINPARAMS declarations ENDPARAMS BEGINLOCALS declarations ENDLOCALS BEGINBODY statements ENDBODY

    IDENT  shift, and go to state 5


State 2

    0 $accept: program . $end

    $end  shift, and go to state 6


State 3

    1 program: functions .

    $default  reduce using rule 1 (program)


State 4

    3 functions: function . functions

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 2 (functions)

    functions  go to state 7
    function   go to state 4


State 5

    4 function: FUNCTION IDENT . SEMICOLON BEGINPARAMS declarations ENDPARAMS BEGINLOCALS declarations ENDLOCALS BEGINBODY statements ENDBODY

    SEMICOLON  shift, and go to state 8


State 6

    0 $accept: program $end .

    $default  accept


State 7

    3 functions: function functions .

    $default  reduce using rule 3 (functions)


State 8

    4 function: FUNCTION IDENT SEMICOLON . BEGINPARAMS declarations ENDPARAMS BEGINLOCALS declarations ENDLOCALS BEGINBODY statements ENDBODY

    BEGINPARAMS  shift, and go to state 9


State 9

    4 function: FUNCTION IDENT SEMICOLON BEGINPARAMS . declarations ENDPARAMS BEGINLOCALS declarations ENDLOCALS BEGINBODY statements ENDBODY

    IDENT  shift, and go to state 10

    $default  reduce using rule 5 (declarations)

    declarations  go to state 11
    declaration   go to state 12
    ids           go to state 13


State 10

   11 ids: IDENT .
   12    | IDENT . COMMA ids

    COMMA  shift, and go to state 14

    $default  reduce using rule 11 (ids)


State 11

    4 function: FUNCTION IDENT SEMICOLON BEGINPARAMS declarations . ENDPARAMS BEGINLOCALS declarations ENDLOCALS BEGINBODY statements ENDBODY

    ENDPARAMS  shift, and go to state 15


State 12

    6 declarations: declaration . SEMICOLON declarations

    SEMICOLON  shift, and go to state 16


State 13

    7 declaration: ids . COLON INT
    8            | ids . COLON ARRAY arr OF INT
    9            | ids . COLON ARRAY arr arr OF INT

    COLON  shift, and go to state 17


State 14

   12 ids: IDENT COMMA . ids

    IDENT  shift, and go to state 10

    ids  go to state 18


State 15

    4 function: FUNCTION IDENT SEMICOLON BEGINPARAMS declarations ENDPARAMS . BEGINLOCALS declarations ENDLOCALS BEGINBODY statements ENDBODY

    BEGINLOCALS  shift, and go to state 19


State 16

    6 declarations: declaration SEMICOLON . declarations

    IDENT  shift, and go to state 10

    $default  reduce using rule 5 (declarations)

    declarations  go to state 20
    declaration   go to state 12
    ids           go to state 13


State 17

    7 declaration: ids COLON . INT
    8            | ids COLON . ARRAY arr OF INT
    9            | ids COLON . ARRAY arr arr OF INT

    INT    shift, and go to state 21
    ARRAY  shift, and go to state 22


State 18

   12 ids: IDENT COMMA ids .

    $default  reduce using rule 12 (ids)


State 19

    4 function: FUNCTION IDENT SEMICOLON BEGINPARAMS declarations ENDPARAMS BEGINLOCALS . declarations ENDLOCALS BEGINBODY statements ENDBODY

    IDENT  shift, and go to state 10

    $default  reduce using rule 5 (declarations)

    declarations  go to state 23
    declaration   go to state 12
    ids           go to state 13


State 20

    6 declarations: declaration SEMICOLON declarations .

    $default  reduce using rule 6 (declarations)


State 21

    7 declaration: ids COLON INT .

    $default  reduce using rule 7 (declaration)


State 22

    8 declaration: ids COLON ARRAY . arr OF INT
    9            | ids COLON ARRAY . arr arr OF INT

    LBRACKET  shift, and go to state 24

    arr  go to state 25


State 23

    4 function: FUNCTION IDENT SEMICOLON BEGINPARAMS declarations ENDPARAMS BEGINLOCALS declarations . ENDLOCALS BEGINBODY statements ENDBODY

    ENDLOCALS  shift, and go to state 26


State 24

   10 arr: LBRACKET . NUMBER RBRACKET

    NUMBER  shift, and go to state 27


State 25

    8 declaration: ids COLON ARRAY arr . OF INT
    9            | ids COLON ARRAY arr . arr OF INT

    LBRACKET  shift, and go to state 24
    OF        shift, and go to state 28

    arr  go to state 29


State 26

    4 function: FUNCTION IDENT SEMICOLON BEGINPARAMS declarations ENDPARAMS BEGINLOCALS declarations ENDLOCALS . BEGINBODY statements ENDBODY

    BEGINBODY  shift, and go to state 30


State 27

   10 arr: LBRACKET NUMBER . RBRACKET

    RBRACKET  shift, and go to state 31


State 28

    8 declaration: ids COLON ARRAY arr OF . INT

    INT  shift, and go to state 32


State 29

    9 declaration: ids COLON ARRAY arr arr . OF INT

    OF  shift, and go to state 33


State 30

    4 function: FUNCTION IDENT SEMICOLON BEGINPARAMS declarations ENDPARAMS BEGINLOCALS declarations ENDLOCALS BEGINBODY . statements ENDBODY

    IDENT     shift, and go to state 34
    IF        shift, and go to state 35
    WHILE     shift, and go to state 36
    DO        shift, and go to state 37
    FOR       shift, and go to state 38
    READ      shift, and go to state 39
    WRITE     shift, and go to state 40
    CONTINUE  shift, and go to state 41
    RETURN    shift, and go to state 42

    statements  go to state 43
    statement   go to state 44
    var         go to state 45


State 31

   10 arr: LBRACKET NUMBER RBRACKET .

    $default  reduce using rule 10 (arr)


State 32

    8 declaration: ids COLON ARRAY arr OF INT .

    $default  reduce using rule 8 (declaration)


State 33

    9 declaration: ids COLON ARRAY arr arr OF . INT

    INT  shift, and go to state 46


State 34

   63 var: IDENT .
   64    | IDENT . brack-expr
   65    | IDENT . brack-expr brack-expr

    LBRACKET  shift, and go to state 47

    $default  reduce using rule 63 (var)

    brack-expr  go to state 48


State 35

   16 statement: IF . bool-expr THEN statements ENDIF
   17          | IF . bool-expr THEN statements ELSE statements ENDIF

    $default  reduce using rule 33 ($@1)

    bool-expr          go to state 49
    relation-and-expr  go to state 50
    relation-expr      go to state 51
    optional-not       go to state 52
    $@1                go to state 53


State 36

   18 statement: WHILE . bool-expr BEGINLOOP statements ENDLOOP

    $default  reduce using rule 33 ($@1)

    bool-expr          go to state 54
    relation-and-expr  go to state 50
    relation-expr      go to state 51
    optional-not       go to state 52
    $@1                go to state 53


State 37

   19 statement: DO . BEGINLOOP statements ENDLOOP WHILE bool-expr

    BEGINLOOP  shift, and go to state 55


State 38

   20 statement: FOR . var ASSIGN NUMBER SEMICOLON bool-expr SEMICOLON var ASSIGN expression BEGINLOOP statements ENDLOOP

    IDENT  shift, and go to state 34

    var  go to state 56


State 39

   21 statement: READ . vars

    IDENT  shift, and go to state 34

    vars  go to state 57
    var   go to state 58


State 40

   22 statement: WRITE . vars

    IDENT  shift, and go to state 34

    vars  go to state 59
    var   go to state 58


State 41

   23 statement: CONTINUE .

    $default  reduce using rule 23 (statement)


State 42

   24 statement: RETURN . expression

    IDENT   shift, and go to state 60
    NUMBER  shift, and go to state 61
    LPAREN  shift, and go to state 62
    MINUS   shift, and go to state 63

    expression           go to state 64
    multiplicative-expr  go to state 65
    term                 go to state 66
    num-term             go to state 67
    id-term              go to state 68
    var                  go to state 69


State 43

    4 function: FUNCTION IDENT SEMICOLON BEGINPARAMS declarations ENDPARAMS BEGINLOCALS declarations ENDLOCALS BEGINBODY statements . ENDBODY

    ENDBODY  shift, and go to state 70


State 44

   13 statements: statement . SEMICOLON
   14           | statement . SEMICOLON statements

    SEMICOLON  shift, and go to state 71


State 45

   15 statement: var . ASSIGN expression

    ASSIGN  shift, and go to state 72


State 46

    9 declaration: ids COLON ARRAY arr arr OF INT .

    $default  reduce using rule 9 (declaration)


State 47

   66 brack-expr: LBRACKET . expression RBRACKET

    IDENT   shift, and go to state 60
    NUMBER  shift, and go to state 61
    LPAREN  shift, and go to state 62
    MINUS   shift, and go to state 63

    expression           go to state 73
    multiplicative-expr  go to state 65
    term                 go to state 66
    num-term             go to state 67
    id-term              go to state 68
    var                  go to state 69


State 48

   64 var: IDENT brack-expr .
   65    | IDENT brack-expr . brack-expr

    LBRACKET  shift, and go to state 47

    $default  reduce using rule 64 (var)

    brack-expr  go to state 74


State 49

   16 statement: IF bool-expr . THEN statements ENDIF
   17          | IF bool-expr . THEN statements ELSE statements ENDIF

    THEN  shift, and go to state 75


State 50

   25 bool-expr: relation-and-expr .
   26          | relation-and-expr . OR bool-expr

    OR  shift, and go to state 76

    $default  reduce using rule 25 (bool-expr)


State 51

   27 relation-and-expr: relation-expr .
   28                  | relation-expr . AND relation-and-expr

    AND  shift, and go to state 77

    $default  reduce using rule 27 (relation-and-expr)


State 52

   29 relation-expr: optional-not . expression comp expression
   30              | optional-not . TRUE
   31              | optional-not . FALSE
   32              | optional-not . LPAREN bool-expr RPAREN

    IDENT   shift, and go to state 60
    NUMBER  shift, and go to state 61
    TRUE    shift, and go to state 78
    FALSE   shift, and go to state 79
    LPAREN  shift, and go to state 80
    MINUS   shift, and go to state 63

    expression           go to state 81
    multiplicative-expr  go to state 65
    term                 go to state 66
    num-term             go to state 67
    id-term              go to state 68
    var                  go to state 69


State 53

   34 optional-not: $@1 . NOT

    NOT  shift, and go to state 82


State 54

   18 statement: WHILE bool-expr . BEGINLOOP statements ENDLOOP

    BEGINLOOP  shift, and go to state 83


State 55

   19 statement: DO BEGINLOOP . statements ENDLOOP WHILE bool-expr

    IDENT     shift, and go to state 34
    IF        shift, and go to state 35
    WHILE     shift, and go to state 36
    DO        shift, and go to state 37
    FOR       shift, and go to state 38
    READ      shift, and go to state 39
    WRITE     shift, and go to state 40
    CONTINUE  shift, and go to state 41
    RETURN    shift, and go to state 42

    statements  go to state 84
    statement   go to state 44
    var         go to state 45


State 56

   20 statement: FOR var . ASSIGN NUMBER SEMICOLON bool-expr SEMICOLON var ASSIGN expression BEGINLOOP statements ENDLOOP

    ASSIGN  shift, and go to state 85


State 57

   21 statement: READ vars .

    $default  reduce using rule 21 (statement)


State 58

   61 vars: var .
   62     | var . COMMA vars

    COMMA  shift, and go to state 86

    $default  reduce using rule 61 (vars)


State 59

   22 statement: WRITE vars .

    $default  reduce using rule 22 (statement)


State 60

   56 id-term: IDENT . LPAREN expressions RPAREN
   63 var: IDENT .
   64    | IDENT . brack-expr
   65    | IDENT . brack-expr brack-expr

    LBRACKET  shift, and go to state 47
    LPAREN    shift, and go to state 87

    $default  reduce using rule 63 (var)

    brack-expr  go to state 48


State 61

   52 num-term: NUMBER .

    $default  reduce using rule 52 (num-term)


State 62

   54 num-term: LPAREN . expression RPAREN

    IDENT   shift, and go to state 60
    NUMBER  shift, and go to state 61
    LPAREN  shift, and go to state 62
    MINUS   shift, and go to state 63

    expression           go to state 88
    multiplicative-expr  go to state 65
    term                 go to state 66
    num-term             go to state 67
    id-term              go to state 68
    var                  go to state 69


State 63

   51 num-term: MINUS . var
   53         | MINUS . NUMBER
   55         | MINUS . LPAREN expression RPAREN

    IDENT   shift, and go to state 34
    NUMBER  shift, and go to state 89
    LPAREN  shift, and go to state 90

    var  go to state 91


State 64

   24 statement: RETURN expression .

    $default  reduce using rule 24 (statement)


State 65

   41 expression: multiplicative-expr .
   42           | multiplicative-expr . PLUS expression
   43           | multiplicative-expr . MINUS expression

    PLUS   shift, and go to state 92
    MINUS  shift, and go to state 93

    $default  reduce using rule 41 (expression)


State 66

   44 multiplicative-expr: term .
   45                    | term . MULT multiplicative-expr
   46                    | term . DIV multiplicative-expr
   47                    | term . MOD multiplicative-expr

    MULT  shift, and go to state 94
    DIV   shift, and go to state 95
    MOD   shift, and go to state 96

    $default  reduce using rule 44 (multiplicative-expr)


State 67

   48 term: num-term .

    $default  reduce using rule 48 (term)


State 68

   49 term: id-term .

    $default  reduce using rule 49 (term)


State 69

   50 num-term: var .

    $default  reduce using rule 50 (num-term)


State 70

    4 function: FUNCTION IDENT SEMICOLON BEGINPARAMS declarations ENDPARAMS BEGINLOCALS declarations ENDLOCALS BEGINBODY statements ENDBODY .

    $default  reduce using rule 4 (function)


State 71

   13 statements: statement SEMICOLON .
   14           | statement SEMICOLON . statements

    IDENT     shift, and go to state 34
    IF        shift, and go to state 35
    WHILE     shift, and go to state 36
    DO        shift, and go to state 37
    FOR       shift, and go to state 38
    READ      shift, and go to state 39
    WRITE     shift, and go to state 40
    CONTINUE  shift, and go to state 41
    RETURN    shift, and go to state 42

    $default  reduce using rule 13 (statements)

    statements  go to state 97
    statement   go to state 44
    var         go to state 45


State 72

   15 statement: var ASSIGN . expression

    IDENT   shift, and go to state 60
    NUMBER  shift, and go to state 61
    LPAREN  shift, and go to state 62
    MINUS   shift, and go to state 63

    expression           go to state 98
    multiplicative-expr  go to state 65
    term                 go to state 66
    num-term             go to state 67
    id-term              go to state 68
    var                  go to state 69


State 73

   66 brack-expr: LBRACKET expression . RBRACKET

    RBRACKET  shift, and go to state 99


State 74

   65 var: IDENT brack-expr brack-expr .

    $default  reduce using rule 65 (var)


State 75

   16 statement: IF bool-expr THEN . statements ENDIF
   17          | IF bool-expr THEN . statements ELSE statements ENDIF

    IDENT     shift, and go to state 34
    IF        shift, and go to state 35
    WHILE     shift, and go to state 36
    DO        shift, and go to state 37
    FOR       shift, and go to state 38
    READ      shift, and go to state 39
    WRITE     shift, and go to state 40
    CONTINUE  shift, and go to state 41
    RETURN    shift, and go to state 42

    statements  go to state 100
    statement   go to state 44
    var         go to state 45


State 76

   26 bool-expr: relation-and-expr OR . bool-expr

    $default  reduce using rule 33 ($@1)

    bool-expr          go to state 101
    relation-and-expr  go to state 50
    relation-expr      go to state 51
    optional-not       go to state 52
    $@1                go to state 53


State 77

   28 relation-and-expr: relation-expr AND . relation-and-expr

    $default  reduce using rule 33 ($@1)

    relation-and-expr  go to state 102
    relation-expr      go to state 51
    optional-not       go to state 52
    $@1                go to state 53


State 78

   30 relation-expr: optional-not TRUE .

    $default  reduce using rule 30 (relation-expr)


State 79

   31 relation-expr: optional-not FALSE .

    $default  reduce using rule 31 (relation-expr)


State 80

   32 relation-expr: optional-not LPAREN . bool-expr RPAREN
   54 num-term: LPAREN . expression RPAREN

    IDENT   shift, and go to state 60
    NUMBER  shift, and go to state 61
    LPAREN  shift, and go to state 62
    MINUS   shift, and go to state 63

    $default  reduce using rule 33 ($@1)

    bool-expr            go to state 103
    relation-and-expr    go to state 50
    relation-expr        go to state 51
    optional-not         go to state 52
    $@1                  go to state 53
    expression           go to state 88
    multiplicative-expr  go to state 65
    term                 go to state 66
    num-term             go to state 67
    id-term              go to state 68
    var                  go to state 69


State 81

   29 relation-expr: optional-not expression . comp expression

    EQ   shift, and go to state 104
    NEQ  shift, and go to state 105
    LE   shift, and go to state 106
    GE   shift, and go to state 107
    LT   shift, and go to state 108
    GT   shift, and go to state 109

    comp  go to state 110


State 82

   34 optional-not: $@1 NOT .

    $default  reduce using rule 34 (optional-not)


State 83

   18 statement: WHILE bool-expr BEGINLOOP . statements ENDLOOP

    IDENT     shift, and go to state 34
    IF        shift, and go to state 35
    WHILE     shift, and go to state 36
    DO        shift, and go to state 37
    FOR       shift, and go to state 38
    READ      shift, and go to state 39
    WRITE     shift, and go to state 40
    CONTINUE  shift, and go to state 41
    RETURN    shift, and go to state 42

    statements  go to state 111
    statement   go to state 44
    var         go to state 45


State 84

   19 statement: DO BEGINLOOP statements . ENDLOOP WHILE bool-expr

    ENDLOOP  shift, and go to state 112


State 85

   20 statement: FOR var ASSIGN . NUMBER SEMICOLON bool-expr SEMICOLON var ASSIGN expression BEGINLOOP statements ENDLOOP

    NUMBER  shift, and go to state 113


State 86

   62 vars: var COMMA . vars

    IDENT  shift, and go to state 34

    vars  go to state 114
    var   go to state 58


State 87

   56 id-term: IDENT LPAREN . expressions RPAREN

    IDENT   shift, and go to state 60
    NUMBER  shift, and go to state 61
    LPAREN  shift, and go to state 62
    MINUS   shift, and go to state 63

    $default  reduce using rule 57 (expressions)

    expression            go to state 115
    multiplicative-expr   go to state 65
    term                  go to state 66
    num-term              go to state 67
    id-term               go to state 68
    expressions           go to state 116
    nonempty-expressions  go to state 117
    var                   go to state 69


State 88

   54 num-term: LPAREN expression . RPAREN

    RPAREN  shift, and go to state 118


State 89

   53 num-term: MINUS NUMBER .

    $default  reduce using rule 53 (num-term)


State 90

   55 num-term: MINUS LPAREN . expression RPAREN

    IDENT   shift, and go to state 60
    NUMBER  shift, and go to state 61
    LPAREN  shift, and go to state 62
    MINUS   shift, and go to state 63

    expression           go to state 119
    multiplicative-expr  go to state 65
    term                 go to state 66
    num-term             go to state 67
    id-term              go to state 68
    var                  go to state 69


State 91

   51 num-term: MINUS var .

    $default  reduce using rule 51 (num-term)


State 92

   42 expression: multiplicative-expr PLUS . expression

    IDENT   shift, and go to state 60
    NUMBER  shift, and go to state 61
    LPAREN  shift, and go to state 62
    MINUS   shift, and go to state 63

    expression           go to state 120
    multiplicative-expr  go to state 65
    term                 go to state 66
    num-term             go to state 67
    id-term              go to state 68
    var                  go to state 69


State 93

   43 expression: multiplicative-expr MINUS . expression

    IDENT   shift, and go to state 60
    NUMBER  shift, and go to state 61
    LPAREN  shift, and go to state 62
    MINUS   shift, and go to state 63

    expression           go to state 121
    multiplicative-expr  go to state 65
    term                 go to state 66
    num-term             go to state 67
    id-term              go to state 68
    var                  go to state 69


State 94

   45 multiplicative-expr: term MULT . multiplicative-expr

    IDENT   shift, and go to state 60
    NUMBER  shift, and go to state 61
    LPAREN  shift, and go to state 62
    MINUS   shift, and go to state 63

    multiplicative-expr  go to state 122
    term                 go to state 66
    num-term             go to state 67
    id-term              go to state 68
    var                  go to state 69


State 95

   46 multiplicative-expr: term DIV . multiplicative-expr

    IDENT   shift, and go to state 60
    NUMBER  shift, and go to state 61
    LPAREN  shift, and go to state 62
    MINUS   shift, and go to state 63

    multiplicative-expr  go to state 123
    term                 go to state 66
    num-term             go to state 67
    id-term              go to state 68
    var                  go to state 69


State 96

   47 multiplicative-expr: term MOD . multiplicative-expr

    IDENT   shift, and go to state 60
    NUMBER  shift, and go to state 61
    LPAREN  shift, and go to state 62
    MINUS   shift, and go to state 63

    multiplicative-expr  go to state 124
    term                 go to state 66
    num-term             go to state 67
    id-term              go to state 68
    var                  go to state 69


State 97

   14 statements: statement SEMICOLON statements .

    $default  reduce using rule 14 (statements)


State 98

   15 statement: var ASSIGN expression .

    $default  reduce using rule 15 (statement)


State 99

   66 brack-expr: LBRACKET expression RBRACKET .

    $default  reduce using rule 66 (brack-expr)


State 100

   16 statement: IF bool-expr THEN statements . ENDIF
   17          | IF bool-expr THEN statements . ELSE statements ENDIF

    ELSE   shift, and go to state 125
    ENDIF  shift, and go to state 126


State 101

   26 bool-expr: relation-and-expr OR bool-expr .

    $default  reduce using rule 26 (bool-expr)


State 102

   28 relation-and-expr: relation-expr AND relation-and-expr .

    $default  reduce using rule 28 (relation-and-expr)


State 103

   32 relation-expr: optional-not LPAREN bool-expr . RPAREN

    RPAREN  shift, and go to state 127


State 104

   35 comp: EQ .

    $default  reduce using rule 35 (comp)


State 105

   36 comp: NEQ .

    $default  reduce using rule 36 (comp)


State 106

   39 comp: LE .

    $default  reduce using rule 39 (comp)


State 107

   40 comp: GE .

    $default  reduce using rule 40 (comp)


State 108

   37 comp: LT .

    $default  reduce using rule 37 (comp)


State 109

   38 comp: GT .

    $default  reduce using rule 38 (comp)


State 110

   29 relation-expr: optional-not expression comp . expression

    IDENT   shift, and go to state 60
    NUMBER  shift, and go to state 61
    LPAREN  shift, and go to state 62
    MINUS   shift, and go to state 63

    expression           go to state 128
    multiplicative-expr  go to state 65
    term                 go to state 66
    num-term             go to state 67
    id-term              go to state 68
    var                  go to state 69


State 111

   18 statement: WHILE bool-expr BEGINLOOP statements . ENDLOOP

    ENDLOOP  shift, and go to state 129


State 112

   19 statement: DO BEGINLOOP statements ENDLOOP . WHILE bool-expr

    WHILE  shift, and go to state 130


State 113

   20 statement: FOR var ASSIGN NUMBER . SEMICOLON bool-expr SEMICOLON var ASSIGN expression BEGINLOOP statements ENDLOOP

    SEMICOLON  shift, and go to state 131


State 114

   62 vars: var COMMA vars .

    $default  reduce using rule 62 (vars)


State 115

   59 nonempty-expressions: expression .
   60                     | expression . COMMA nonempty-expressions

    COMMA  shift, and go to state 132

    $default  reduce using rule 59 (nonempty-expressions)


State 116

   56 id-term: IDENT LPAREN expressions . RPAREN

    RPAREN  shift, and go to state 133


State 117

   58 expressions: nonempty-expressions .

    $default  reduce using rule 58 (expressions)


State 118

   54 num-term: LPAREN expression RPAREN .

    $default  reduce using rule 54 (num-term)


State 119

   55 num-term: MINUS LPAREN expression . RPAREN

    RPAREN  shift, and go to state 134


State 120

   42 expression: multiplicative-expr PLUS expression .

    $default  reduce using rule 42 (expression)


State 121

   43 expression: multiplicative-expr MINUS expression .

    $default  reduce using rule 43 (expression)


State 122

   45 multiplicative-expr: term MULT multiplicative-expr .

    $default  reduce using rule 45 (multiplicative-expr)


State 123

   46 multiplicative-expr: term DIV multiplicative-expr .

    $default  reduce using rule 46 (multiplicative-expr)


State 124

   47 multiplicative-expr: term MOD multiplicative-expr .

    $default  reduce using rule 47 (multiplicative-expr)


State 125

   17 statement: IF bool-expr THEN statements ELSE . statements ENDIF

    IDENT     shift, and go to state 34
    IF        shift, and go to state 35
    WHILE     shift, and go to state 36
    DO        shift, and go to state 37
    FOR       shift, and go to state 38
    READ      shift, and go to state 39
    WRITE     shift, and go to state 40
    CONTINUE  shift, and go to state 41
    RETURN    shift, and go to state 42

    statements  go to state 135
    statement   go to state 44
    var         go to state 45


State 126

   16 statement: IF bool-expr THEN statements ENDIF .

    $default  reduce using rule 16 (statement)


State 127

   32 relation-expr: optional-not LPAREN bool-expr RPAREN .

    $default  reduce using rule 32 (relation-expr)


State 128

   29 relation-expr: optional-not expression comp expression .

    $default  reduce using rule 29 (relation-expr)


State 129

   18 statement: WHILE bool-expr BEGINLOOP statements ENDLOOP .

    $default  reduce using rule 18 (statement)


State 130

   19 statement: DO BEGINLOOP statements ENDLOOP WHILE . bool-expr

    $default  reduce using rule 33 ($@1)

    bool-expr          go to state 136
    relation-and-expr  go to state 50
    relation-expr      go to state 51
    optional-not       go to state 52
    $@1                go to state 53


State 131

   20 statement: FOR var ASSIGN NUMBER SEMICOLON . bool-expr SEMICOLON var ASSIGN expression BEGINLOOP statements ENDLOOP

    $default  reduce using rule 33 ($@1)

    bool-expr          go to state 137
    relation-and-expr  go to state 50
    relation-expr      go to state 51
    optional-not       go to state 52
    $@1                go to state 53


State 132

   60 nonempty-expressions: expression COMMA . nonempty-expressions

    IDENT   shift, and go to state 60
    NUMBER  shift, and go to state 61
    LPAREN  shift, and go to state 62
    MINUS   shift, and go to state 63

    expression            go to state 115
    multiplicative-expr   go to state 65
    term                  go to state 66
    num-term              go to state 67
    id-term               go to state 68
    nonempty-expressions  go to state 138
    var                   go to state 69


State 133

   56 id-term: IDENT LPAREN expressions RPAREN .

    $default  reduce using rule 56 (id-term)


State 134

   55 num-term: MINUS LPAREN expression RPAREN .

    $default  reduce using rule 55 (num-term)


State 135

   17 statement: IF bool-expr THEN statements ELSE statements . ENDIF

    ENDIF  shift, and go to state 139


State 136

   19 statement: DO BEGINLOOP statements ENDLOOP WHILE bool-expr .

    $default  reduce using rule 19 (statement)


State 137

   20 statement: FOR var ASSIGN NUMBER SEMICOLON bool-expr . SEMICOLON var ASSIGN expression BEGINLOOP statements ENDLOOP

    SEMICOLON  shift, and go to state 140


State 138

   60 nonempty-expressions: expression COMMA nonempty-expressions .

    $default  reduce using rule 60 (nonempty-expressions)


State 139

   17 statement: IF bool-expr THEN statements ELSE statements ENDIF .

    $default  reduce using rule 17 (statement)


State 140

   20 statement: FOR var ASSIGN NUMBER SEMICOLON bool-expr SEMICOLON . var ASSIGN expression BEGINLOOP statements ENDLOOP

    IDENT  shift, and go to state 34

    var  go to state 141


State 141

   20 statement: FOR var ASSIGN NUMBER SEMICOLON bool-expr SEMICOLON var . ASSIGN expression BEGINLOOP statements ENDLOOP

    ASSIGN  shift, and go to state 142


State 142

   20 statement: FOR var ASSIGN NUMBER SEMICOLON bool-expr SEMICOLON var ASSIGN . expression BEGINLOOP statements ENDLOOP

    IDENT   shift, and go to state 60
    NUMBER  shift, and go to state 61
    LPAREN  shift, and go to state 62
    MINUS   shift, and go to state 63

    expression           go to state 143
    multiplicative-expr  go to state 65
    term                 go to state 66
    num-term             go to state 67
    id-term              go to state 68
    var                  go to state 69


State 143

   20 statement: FOR var ASSIGN NUMBER SEMICOLON bool-expr SEMICOLON var ASSIGN expression . BEGINLOOP statements ENDLOOP

    BEGINLOOP  shift, and go to state 144


State 144

   20 statement: FOR var ASSIGN NUMBER SEMICOLON bool-expr SEMICOLON var ASSIGN expression BEGINLOOP . statements ENDLOOP

    IDENT     shift, and go to state 34
    IF        shift, and go to state 35
    WHILE     shift, and go to state 36
    DO        shift, and go to state 37
    FOR       shift, and go to state 38
    READ      shift, and go to state 39
    WRITE     shift, and go to state 40
    CONTINUE  shift, and go to state 41
    RETURN    shift, and go to state 42

    statements  go to state 145
    statement   go to state 44
    var         go to state 45


State 145

   20 statement: FOR var ASSIGN NUMBER SEMICOLON bool-expr SEMICOLON var ASSIGN expression BEGINLOOP statements . ENDLOOP

    ENDLOOP  shift, and go to state 146


State 146

   20 statement: FOR var ASSIGN NUMBER SEMICOLON bool-expr SEMICOLON var ASSIGN expression BEGINLOOP statements ENDLOOP .

    $default  reduce using rule 20 (statement)
