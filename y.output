Grammar

    0 $accept: program $end

    1 program: functions

    2 functions: %empty
    3          | function functions

    4 function: FUNCTION IDENT SEMICOLON BEGINPARAMS declarations ENDPARAMS BEGINLOCALS declarations ENDLOCALS BEGINBODY statements ENDBODY

    5 declarations: %empty
    6             | declaration SEMICOLON declarations

    7 declaration: ids COLON INT
    8            | ids COLON ARRAY arr OF INT
    9            | ids COLON ARRAY arr arr OF INT

   10 arr: LBRACKET NUMBER RBRACKET

   11 ids: IDENT
   12    | IDENT COMMA ids

   13 statements: statement SEMICOLON
   14           | statement SEMICOLON statements

   15 statement: var ASSIGN expression
   16          | IF bool_expr THEN statements ENDIF
   17          | IF bool_expr THEN statements ELSE statements ENDIF
   18          | WHILE bool_expr BEGINLOOP statements ENDLOOP
   19          | DO BEGINLOOP statements ENDLOOP WHILE bool_expr
   20          | FOR var ASSIGN NUMBER SEMICOLON bool_expr SEMICOLON var ASSIGN expression BEGINLOOP statements ENDLOOP
   21          | READ vars
   22          | WRITE vars
   23          | CONTINUE
   24          | RETURN expression

   25 bool_expr: relation_and_expr
   26          | relation_and_expr OR bool_expr

   27 relation_and_expr: relation_expr
   28                  | relation_expr AND relation_and_expr

   29 relation_expr: expression comp expression
   30              | NOT expression comp expression
   31              | TRUE
   32              | NOT TRUE
   33              | FALSE
   34              | NOT FALSE
   35              | LPAREN bool_expr RPAREN
   36              | NOT LPAREN bool_expr RPAREN

   37 comp: EQ
   38     | NEQ
   39     | LT
   40     | GT
   41     | LE
   42     | GE

   43 expression: multiplicative_expr
   44           | multiplicative_expr PLUS expression
   45           | multiplicative_expr MINUS expression

   46 multiplicative_expr: term
   47                    | term MULT multiplicative_expr
   48                    | term DIV multiplicative_expr
   49                    | term MOD multiplicative_expr

   50 term: num_term
   51     | id_term

   52 num_term: var
   53         | MINUS var
   54         | NUMBER
   55         | MINUS NUMBER
   56         | LPAREN expression RPAREN
   57         | MINUS LPAREN expression RPAREN

   58 id_term: IDENT LPAREN expressions RPAREN

   59 expressions: %empty
   60            | nonempty_expressions

   61 nonempty_expressions: expression
   62                     | expression COMMA nonempty_expressions

   63 vars: var
   64     | var COMMA vars

   65 var: IDENT
   66    | IDENT brack_expr
   67    | IDENT brack_expr brack_expr

   68 brack_expr: LBRACKET expression RBRACKET


Terminals, with rules where they appear

$end (0) 0
error (256)
FUNCTION (258) 4
BEGINPARAMS (259) 4
ENDPARAMS (260) 4
BEGINLOCALS (261) 4
ENDLOCALS (262) 4
BEGINBODY (263) 4
ENDBODY (264) 4
INT (265) 7 8 9
ARRAY (266) 8 9
OF (267) 8 9
IF (268) 16 17
THEN (269) 16 17
ENDIF (270) 16 17
ELSE (271) 17
WHILE (272) 18 19
DO (273) 19
FOR (274) 20
BEGINLOOP (275) 18 19 20
ENDLOOP (276) 18 19 20
CONTINUE (277) 23
READ (278) 21
WRITE (279) 22
AND (280) 28
OR (281) 26
NOT (282) 30 32 34 36
TRUE (283) 31 32
FALSE (284) 33 34
RETURN (285) 24
MINUS (286) 45 53 55 57
PLUS (287) 44
MULT (288) 47
DIV (289) 48
MOD (290) 49
EQ (291) 37
NEQ (292) 38
LE (293) 41
GE (294) 42
LT (295) 39
GT (296) 40
SEMICOLON (297) 4 6 13 14 20
COMMA (298) 12 62 64
LPAREN (299) 35 36 56 57 58
RPAREN (300) 35 36 56 57 58
LBRACKET (301) 10 68
RBRACKET (302) 10 68
ASSIGN (303) 15 20
COLON (304) 7 8 9
NUMBER (305) 10 20 54 55
IDENT (306) 4 11 12 58 65 66 67


Nonterminals, with rules where they appear

$accept (52)
    on left: 0
program (53)
    on left: 1, on right: 0
functions (54)
    on left: 2 3, on right: 1 3
function (55)
    on left: 4, on right: 3
declarations (56)
    on left: 5 6, on right: 4 6
declaration (57)
    on left: 7 8 9, on right: 6
arr (58)
    on left: 10, on right: 8 9
ids (59)
    on left: 11 12, on right: 7 8 9 12
statements (60)
    on left: 13 14, on right: 4 14 16 17 18 19 20
statement (61)
    on left: 15 16 17 18 19 20 21 22 23 24, on right: 13 14
bool_expr (62)
    on left: 25 26, on right: 16 17 18 19 20 26 35 36
relation_and_expr (63)
    on left: 27 28, on right: 25 26 28
relation_expr (64)
    on left: 29 30 31 32 33 34 35 36, on right: 27 28
comp (65)
    on left: 37 38 39 40 41 42, on right: 29 30
expression (66)
    on left: 43 44 45, on right: 15 20 24 29 30 44 45 56 57 61 62 68
multiplicative_expr (67)
    on left: 46 47 48 49, on right: 43 44 45 47 48 49
term (68)
    on left: 50 51, on right: 46 47 48 49
num_term (69)
    on left: 52 53 54 55 56 57, on right: 50
id_term (70)
    on left: 58, on right: 51
expressions (71)
    on left: 59 60, on right: 58
nonempty_expressions (72)
    on left: 61 62, on right: 60 62
vars (73)
    on left: 63 64, on right: 21 22 64
var (74)
    on left: 65 66 67, on right: 15 20 52 53 63 64
brack_expr (75)
    on left: 68, on right: 66 67


State 0

    0 $accept: . program $end

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 2 (functions)

    program    go to state 2
    functions  go to state 3
    function   go to state 4


State 1

    4 function: FUNCTION . IDENT SEMICOLON BEGINPARAMS declarations ENDPARAMS BEGINLOCALS declarations ENDLOCALS BEGINBODY statements ENDBODY

    IDENT  shift, and go to state 5


State 2

    0 $accept: program . $end

    $end  shift, and go to state 6


State 3

    1 program: functions .

    $default  reduce using rule 1 (program)


State 4

    3 functions: function . functions

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 2 (functions)

    functions  go to state 7
    function   go to state 4


State 5

    4 function: FUNCTION IDENT . SEMICOLON BEGINPARAMS declarations ENDPARAMS BEGINLOCALS declarations ENDLOCALS BEGINBODY statements ENDBODY

    SEMICOLON  shift, and go to state 8


State 6

    0 $accept: program $end .

    $default  accept


State 7

    3 functions: function functions .

    $default  reduce using rule 3 (functions)


State 8

    4 function: FUNCTION IDENT SEMICOLON . BEGINPARAMS declarations ENDPARAMS BEGINLOCALS declarations ENDLOCALS BEGINBODY statements ENDBODY

    BEGINPARAMS  shift, and go to state 9


State 9

    4 function: FUNCTION IDENT SEMICOLON BEGINPARAMS . declarations ENDPARAMS BEGINLOCALS declarations ENDLOCALS BEGINBODY statements ENDBODY

    IDENT  shift, and go to state 10

    $default  reduce using rule 5 (declarations)

    declarations  go to state 11
    declaration   go to state 12
    ids           go to state 13


State 10

   11 ids: IDENT .
   12    | IDENT . COMMA ids

    COMMA  shift, and go to state 14

    $default  reduce using rule 11 (ids)


State 11

    4 function: FUNCTION IDENT SEMICOLON BEGINPARAMS declarations . ENDPARAMS BEGINLOCALS declarations ENDLOCALS BEGINBODY statements ENDBODY

    ENDPARAMS  shift, and go to state 15


State 12

    6 declarations: declaration . SEMICOLON declarations

    SEMICOLON  shift, and go to state 16


State 13

    7 declaration: ids . COLON INT
    8            | ids . COLON ARRAY arr OF INT
    9            | ids . COLON ARRAY arr arr OF INT

    COLON  shift, and go to state 17


State 14

   12 ids: IDENT COMMA . ids

    IDENT  shift, and go to state 10

    ids  go to state 18


State 15

    4 function: FUNCTION IDENT SEMICOLON BEGINPARAMS declarations ENDPARAMS . BEGINLOCALS declarations ENDLOCALS BEGINBODY statements ENDBODY

    BEGINLOCALS  shift, and go to state 19


State 16

    6 declarations: declaration SEMICOLON . declarations

    IDENT  shift, and go to state 10

    $default  reduce using rule 5 (declarations)

    declarations  go to state 20
    declaration   go to state 12
    ids           go to state 13


State 17

    7 declaration: ids COLON . INT
    8            | ids COLON . ARRAY arr OF INT
    9            | ids COLON . ARRAY arr arr OF INT

    INT    shift, and go to state 21
    ARRAY  shift, and go to state 22


State 18

   12 ids: IDENT COMMA ids .

    $default  reduce using rule 12 (ids)


State 19

    4 function: FUNCTION IDENT SEMICOLON BEGINPARAMS declarations ENDPARAMS BEGINLOCALS . declarations ENDLOCALS BEGINBODY statements ENDBODY

    IDENT  shift, and go to state 10

    $default  reduce using rule 5 (declarations)

    declarations  go to state 23
    declaration   go to state 12
    ids           go to state 13


State 20

    6 declarations: declaration SEMICOLON declarations .

    $default  reduce using rule 6 (declarations)


State 21

    7 declaration: ids COLON INT .

    $default  reduce using rule 7 (declaration)


State 22

    8 declaration: ids COLON ARRAY . arr OF INT
    9            | ids COLON ARRAY . arr arr OF INT

    LBRACKET  shift, and go to state 24

    arr  go to state 25


State 23

    4 function: FUNCTION IDENT SEMICOLON BEGINPARAMS declarations ENDPARAMS BEGINLOCALS declarations . ENDLOCALS BEGINBODY statements ENDBODY

    ENDLOCALS  shift, and go to state 26


State 24

   10 arr: LBRACKET . NUMBER RBRACKET

    NUMBER  shift, and go to state 27


State 25

    8 declaration: ids COLON ARRAY arr . OF INT
    9            | ids COLON ARRAY arr . arr OF INT

    OF        shift, and go to state 28
    LBRACKET  shift, and go to state 24

    arr  go to state 29


State 26

    4 function: FUNCTION IDENT SEMICOLON BEGINPARAMS declarations ENDPARAMS BEGINLOCALS declarations ENDLOCALS . BEGINBODY statements ENDBODY

    BEGINBODY  shift, and go to state 30


State 27

   10 arr: LBRACKET NUMBER . RBRACKET

    RBRACKET  shift, and go to state 31


State 28

    8 declaration: ids COLON ARRAY arr OF . INT

    INT  shift, and go to state 32


State 29

    9 declaration: ids COLON ARRAY arr arr . OF INT

    OF  shift, and go to state 33


State 30

    4 function: FUNCTION IDENT SEMICOLON BEGINPARAMS declarations ENDPARAMS BEGINLOCALS declarations ENDLOCALS BEGINBODY . statements ENDBODY

    IF        shift, and go to state 34
    WHILE     shift, and go to state 35
    DO        shift, and go to state 36
    FOR       shift, and go to state 37
    CONTINUE  shift, and go to state 38
    READ      shift, and go to state 39
    WRITE     shift, and go to state 40
    RETURN    shift, and go to state 41
    IDENT     shift, and go to state 42

    statements  go to state 43
    statement   go to state 44
    var         go to state 45


State 31

   10 arr: LBRACKET NUMBER RBRACKET .

    $default  reduce using rule 10 (arr)


State 32

    8 declaration: ids COLON ARRAY arr OF INT .

    $default  reduce using rule 8 (declaration)


State 33

    9 declaration: ids COLON ARRAY arr arr OF . INT

    INT  shift, and go to state 46


State 34

   16 statement: IF . bool_expr THEN statements ENDIF
   17          | IF . bool_expr THEN statements ELSE statements ENDIF

    NOT     shift, and go to state 47
    TRUE    shift, and go to state 48
    FALSE   shift, and go to state 49
    MINUS   shift, and go to state 50
    LPAREN  shift, and go to state 51
    NUMBER  shift, and go to state 52
    IDENT   shift, and go to state 53

    bool_expr            go to state 54
    relation_and_expr    go to state 55
    relation_expr        go to state 56
    expression           go to state 57
    multiplicative_expr  go to state 58
    term                 go to state 59
    num_term             go to state 60
    id_term              go to state 61
    var                  go to state 62


State 35

   18 statement: WHILE . bool_expr BEGINLOOP statements ENDLOOP

    NOT     shift, and go to state 47
    TRUE    shift, and go to state 48
    FALSE   shift, and go to state 49
    MINUS   shift, and go to state 50
    LPAREN  shift, and go to state 51
    NUMBER  shift, and go to state 52
    IDENT   shift, and go to state 53

    bool_expr            go to state 63
    relation_and_expr    go to state 55
    relation_expr        go to state 56
    expression           go to state 57
    multiplicative_expr  go to state 58
    term                 go to state 59
    num_term             go to state 60
    id_term              go to state 61
    var                  go to state 62


State 36

   19 statement: DO . BEGINLOOP statements ENDLOOP WHILE bool_expr

    BEGINLOOP  shift, and go to state 64


State 37

   20 statement: FOR . var ASSIGN NUMBER SEMICOLON bool_expr SEMICOLON var ASSIGN expression BEGINLOOP statements ENDLOOP

    IDENT  shift, and go to state 42

    var  go to state 65


State 38

   23 statement: CONTINUE .

    $default  reduce using rule 23 (statement)


State 39

   21 statement: READ . vars

    IDENT  shift, and go to state 42

    vars  go to state 66
    var   go to state 67


State 40

   22 statement: WRITE . vars

    IDENT  shift, and go to state 42

    vars  go to state 68
    var   go to state 67


State 41

   24 statement: RETURN . expression

    MINUS   shift, and go to state 50
    LPAREN  shift, and go to state 69
    NUMBER  shift, and go to state 52
    IDENT   shift, and go to state 53

    expression           go to state 70
    multiplicative_expr  go to state 58
    term                 go to state 59
    num_term             go to state 60
    id_term              go to state 61
    var                  go to state 62


State 42

   65 var: IDENT .
   66    | IDENT . brack_expr
   67    | IDENT . brack_expr brack_expr

    LBRACKET  shift, and go to state 71

    $default  reduce using rule 65 (var)

    brack_expr  go to state 72


State 43

    4 function: FUNCTION IDENT SEMICOLON BEGINPARAMS declarations ENDPARAMS BEGINLOCALS declarations ENDLOCALS BEGINBODY statements . ENDBODY

    ENDBODY  shift, and go to state 73


State 44

   13 statements: statement . SEMICOLON
   14           | statement . SEMICOLON statements

    SEMICOLON  shift, and go to state 74


State 45

   15 statement: var . ASSIGN expression

    ASSIGN  shift, and go to state 75


State 46

    9 declaration: ids COLON ARRAY arr arr OF INT .

    $default  reduce using rule 9 (declaration)


State 47

   30 relation_expr: NOT . expression comp expression
   32              | NOT . TRUE
   34              | NOT . FALSE
   36              | NOT . LPAREN bool_expr RPAREN

    TRUE    shift, and go to state 76
    FALSE   shift, and go to state 77
    MINUS   shift, and go to state 50
    LPAREN  shift, and go to state 78
    NUMBER  shift, and go to state 52
    IDENT   shift, and go to state 53

    expression           go to state 79
    multiplicative_expr  go to state 58
    term                 go to state 59
    num_term             go to state 60
    id_term              go to state 61
    var                  go to state 62


State 48

   31 relation_expr: TRUE .

    $default  reduce using rule 31 (relation_expr)


State 49

   33 relation_expr: FALSE .

    $default  reduce using rule 33 (relation_expr)


State 50

   53 num_term: MINUS . var
   55         | MINUS . NUMBER
   57         | MINUS . LPAREN expression RPAREN

    LPAREN  shift, and go to state 80
    NUMBER  shift, and go to state 81
    IDENT   shift, and go to state 42

    var  go to state 82


State 51

   35 relation_expr: LPAREN . bool_expr RPAREN
   56 num_term: LPAREN . expression RPAREN

    NOT     shift, and go to state 47
    TRUE    shift, and go to state 48
    FALSE   shift, and go to state 49
    MINUS   shift, and go to state 50
    LPAREN  shift, and go to state 51
    NUMBER  shift, and go to state 52
    IDENT   shift, and go to state 53

    bool_expr            go to state 83
    relation_and_expr    go to state 55
    relation_expr        go to state 56
    expression           go to state 84
    multiplicative_expr  go to state 58
    term                 go to state 59
    num_term             go to state 60
    id_term              go to state 61
    var                  go to state 62


State 52

   54 num_term: NUMBER .

    $default  reduce using rule 54 (num_term)


State 53

   58 id_term: IDENT . LPAREN expressions RPAREN
   65 var: IDENT .
   66    | IDENT . brack_expr
   67    | IDENT . brack_expr brack_expr

    LPAREN    shift, and go to state 85
    LBRACKET  shift, and go to state 71

    $default  reduce using rule 65 (var)

    brack_expr  go to state 72


State 54

   16 statement: IF bool_expr . THEN statements ENDIF
   17          | IF bool_expr . THEN statements ELSE statements ENDIF

    THEN  shift, and go to state 86


State 55

   25 bool_expr: relation_and_expr .
   26          | relation_and_expr . OR bool_expr

    OR  shift, and go to state 87

    $default  reduce using rule 25 (bool_expr)


State 56

   27 relation_and_expr: relation_expr .
   28                  | relation_expr . AND relation_and_expr

    AND  shift, and go to state 88

    $default  reduce using rule 27 (relation_and_expr)


State 57

   29 relation_expr: expression . comp expression

    EQ   shift, and go to state 89
    NEQ  shift, and go to state 90
    LE   shift, and go to state 91
    GE   shift, and go to state 92
    LT   shift, and go to state 93
    GT   shift, and go to state 94

    comp  go to state 95


State 58

   43 expression: multiplicative_expr .
   44           | multiplicative_expr . PLUS expression
   45           | multiplicative_expr . MINUS expression

    MINUS  shift, and go to state 96
    PLUS   shift, and go to state 97

    $default  reduce using rule 43 (expression)


State 59

   46 multiplicative_expr: term .
   47                    | term . MULT multiplicative_expr
   48                    | term . DIV multiplicative_expr
   49                    | term . MOD multiplicative_expr

    MULT  shift, and go to state 98
    DIV   shift, and go to state 99
    MOD   shift, and go to state 100

    $default  reduce using rule 46 (multiplicative_expr)


State 60

   50 term: num_term .

    $default  reduce using rule 50 (term)


State 61

   51 term: id_term .

    $default  reduce using rule 51 (term)


State 62

   52 num_term: var .

    $default  reduce using rule 52 (num_term)


State 63

   18 statement: WHILE bool_expr . BEGINLOOP statements ENDLOOP

    BEGINLOOP  shift, and go to state 101


State 64

   19 statement: DO BEGINLOOP . statements ENDLOOP WHILE bool_expr

    IF        shift, and go to state 34
    WHILE     shift, and go to state 35
    DO        shift, and go to state 36
    FOR       shift, and go to state 37
    CONTINUE  shift, and go to state 38
    READ      shift, and go to state 39
    WRITE     shift, and go to state 40
    RETURN    shift, and go to state 41
    IDENT     shift, and go to state 42

    statements  go to state 102
    statement   go to state 44
    var         go to state 45


State 65

   20 statement: FOR var . ASSIGN NUMBER SEMICOLON bool_expr SEMICOLON var ASSIGN expression BEGINLOOP statements ENDLOOP

    ASSIGN  shift, and go to state 103


State 66

   21 statement: READ vars .

    $default  reduce using rule 21 (statement)


State 67

   63 vars: var .
   64     | var . COMMA vars

    COMMA  shift, and go to state 104

    $default  reduce using rule 63 (vars)


State 68

   22 statement: WRITE vars .

    $default  reduce using rule 22 (statement)


State 69

   56 num_term: LPAREN . expression RPAREN

    MINUS   shift, and go to state 50
    LPAREN  shift, and go to state 69
    NUMBER  shift, and go to state 52
    IDENT   shift, and go to state 53

    expression           go to state 105
    multiplicative_expr  go to state 58
    term                 go to state 59
    num_term             go to state 60
    id_term              go to state 61
    var                  go to state 62


State 70

   24 statement: RETURN expression .

    $default  reduce using rule 24 (statement)


State 71

   68 brack_expr: LBRACKET . expression RBRACKET

    MINUS   shift, and go to state 50
    LPAREN  shift, and go to state 69
    NUMBER  shift, and go to state 52
    IDENT   shift, and go to state 53

    expression           go to state 106
    multiplicative_expr  go to state 58
    term                 go to state 59
    num_term             go to state 60
    id_term              go to state 61
    var                  go to state 62


State 72

   66 var: IDENT brack_expr .
   67    | IDENT brack_expr . brack_expr

    LBRACKET  shift, and go to state 71

    $default  reduce using rule 66 (var)

    brack_expr  go to state 107


State 73

    4 function: FUNCTION IDENT SEMICOLON BEGINPARAMS declarations ENDPARAMS BEGINLOCALS declarations ENDLOCALS BEGINBODY statements ENDBODY .

    $default  reduce using rule 4 (function)


State 74

   13 statements: statement SEMICOLON .
   14           | statement SEMICOLON . statements

    IF        shift, and go to state 34
    WHILE     shift, and go to state 35
    DO        shift, and go to state 36
    FOR       shift, and go to state 37
    CONTINUE  shift, and go to state 38
    READ      shift, and go to state 39
    WRITE     shift, and go to state 40
    RETURN    shift, and go to state 41
    IDENT     shift, and go to state 42

    $default  reduce using rule 13 (statements)

    statements  go to state 108
    statement   go to state 44
    var         go to state 45


State 75

   15 statement: var ASSIGN . expression

    MINUS   shift, and go to state 50
    LPAREN  shift, and go to state 69
    NUMBER  shift, and go to state 52
    IDENT   shift, and go to state 53

    expression           go to state 109
    multiplicative_expr  go to state 58
    term                 go to state 59
    num_term             go to state 60
    id_term              go to state 61
    var                  go to state 62


State 76

   32 relation_expr: NOT TRUE .

    $default  reduce using rule 32 (relation_expr)


State 77

   34 relation_expr: NOT FALSE .

    $default  reduce using rule 34 (relation_expr)


State 78

   36 relation_expr: NOT LPAREN . bool_expr RPAREN
   56 num_term: LPAREN . expression RPAREN

    NOT     shift, and go to state 47
    TRUE    shift, and go to state 48
    FALSE   shift, and go to state 49
    MINUS   shift, and go to state 50
    LPAREN  shift, and go to state 51
    NUMBER  shift, and go to state 52
    IDENT   shift, and go to state 53

    bool_expr            go to state 110
    relation_and_expr    go to state 55
    relation_expr        go to state 56
    expression           go to state 84
    multiplicative_expr  go to state 58
    term                 go to state 59
    num_term             go to state 60
    id_term              go to state 61
    var                  go to state 62


State 79

   30 relation_expr: NOT expression . comp expression

    EQ   shift, and go to state 89
    NEQ  shift, and go to state 90
    LE   shift, and go to state 91
    GE   shift, and go to state 92
    LT   shift, and go to state 93
    GT   shift, and go to state 94

    comp  go to state 111


State 80

   57 num_term: MINUS LPAREN . expression RPAREN

    MINUS   shift, and go to state 50
    LPAREN  shift, and go to state 69
    NUMBER  shift, and go to state 52
    IDENT   shift, and go to state 53

    expression           go to state 112
    multiplicative_expr  go to state 58
    term                 go to state 59
    num_term             go to state 60
    id_term              go to state 61
    var                  go to state 62


State 81

   55 num_term: MINUS NUMBER .

    $default  reduce using rule 55 (num_term)


State 82

   53 num_term: MINUS var .

    $default  reduce using rule 53 (num_term)


State 83

   35 relation_expr: LPAREN bool_expr . RPAREN

    RPAREN  shift, and go to state 113


State 84

   29 relation_expr: expression . comp expression
   56 num_term: LPAREN expression . RPAREN

    EQ      shift, and go to state 89
    NEQ     shift, and go to state 90
    LE      shift, and go to state 91
    GE      shift, and go to state 92
    LT      shift, and go to state 93
    GT      shift, and go to state 94
    RPAREN  shift, and go to state 114

    comp  go to state 95


State 85

   58 id_term: IDENT LPAREN . expressions RPAREN

    MINUS   shift, and go to state 50
    LPAREN  shift, and go to state 69
    NUMBER  shift, and go to state 52
    IDENT   shift, and go to state 53

    $default  reduce using rule 59 (expressions)

    expression            go to state 115
    multiplicative_expr   go to state 58
    term                  go to state 59
    num_term              go to state 60
    id_term               go to state 61
    expressions           go to state 116
    nonempty_expressions  go to state 117
    var                   go to state 62


State 86

   16 statement: IF bool_expr THEN . statements ENDIF
   17          | IF bool_expr THEN . statements ELSE statements ENDIF

    IF        shift, and go to state 34
    WHILE     shift, and go to state 35
    DO        shift, and go to state 36
    FOR       shift, and go to state 37
    CONTINUE  shift, and go to state 38
    READ      shift, and go to state 39
    WRITE     shift, and go to state 40
    RETURN    shift, and go to state 41
    IDENT     shift, and go to state 42

    statements  go to state 118
    statement   go to state 44
    var         go to state 45


State 87

   26 bool_expr: relation_and_expr OR . bool_expr

    NOT     shift, and go to state 47
    TRUE    shift, and go to state 48
    FALSE   shift, and go to state 49
    MINUS   shift, and go to state 50
    LPAREN  shift, and go to state 51
    NUMBER  shift, and go to state 52
    IDENT   shift, and go to state 53

    bool_expr            go to state 119
    relation_and_expr    go to state 55
    relation_expr        go to state 56
    expression           go to state 57
    multiplicative_expr  go to state 58
    term                 go to state 59
    num_term             go to state 60
    id_term              go to state 61
    var                  go to state 62


State 88

   28 relation_and_expr: relation_expr AND . relation_and_expr

    NOT     shift, and go to state 47
    TRUE    shift, and go to state 48
    FALSE   shift, and go to state 49
    MINUS   shift, and go to state 50
    LPAREN  shift, and go to state 51
    NUMBER  shift, and go to state 52
    IDENT   shift, and go to state 53

    relation_and_expr    go to state 120
    relation_expr        go to state 56
    expression           go to state 57
    multiplicative_expr  go to state 58
    term                 go to state 59
    num_term             go to state 60
    id_term              go to state 61
    var                  go to state 62


State 89

   37 comp: EQ .

    $default  reduce using rule 37 (comp)


State 90

   38 comp: NEQ .

    $default  reduce using rule 38 (comp)


State 91

   41 comp: LE .

    $default  reduce using rule 41 (comp)


State 92

   42 comp: GE .

    $default  reduce using rule 42 (comp)


State 93

   39 comp: LT .

    $default  reduce using rule 39 (comp)


State 94

   40 comp: GT .

    $default  reduce using rule 40 (comp)


State 95

   29 relation_expr: expression comp . expression

    MINUS   shift, and go to state 50
    LPAREN  shift, and go to state 69
    NUMBER  shift, and go to state 52
    IDENT   shift, and go to state 53

    expression           go to state 121
    multiplicative_expr  go to state 58
    term                 go to state 59
    num_term             go to state 60
    id_term              go to state 61
    var                  go to state 62


State 96

   45 expression: multiplicative_expr MINUS . expression

    MINUS   shift, and go to state 50
    LPAREN  shift, and go to state 69
    NUMBER  shift, and go to state 52
    IDENT   shift, and go to state 53

    expression           go to state 122
    multiplicative_expr  go to state 58
    term                 go to state 59
    num_term             go to state 60
    id_term              go to state 61
    var                  go to state 62


State 97

   44 expression: multiplicative_expr PLUS . expression

    MINUS   shift, and go to state 50
    LPAREN  shift, and go to state 69
    NUMBER  shift, and go to state 52
    IDENT   shift, and go to state 53

    expression           go to state 123
    multiplicative_expr  go to state 58
    term                 go to state 59
    num_term             go to state 60
    id_term              go to state 61
    var                  go to state 62


State 98

   47 multiplicative_expr: term MULT . multiplicative_expr

    MINUS   shift, and go to state 50
    LPAREN  shift, and go to state 69
    NUMBER  shift, and go to state 52
    IDENT   shift, and go to state 53

    multiplicative_expr  go to state 124
    term                 go to state 59
    num_term             go to state 60
    id_term              go to state 61
    var                  go to state 62


State 99

   48 multiplicative_expr: term DIV . multiplicative_expr

    MINUS   shift, and go to state 50
    LPAREN  shift, and go to state 69
    NUMBER  shift, and go to state 52
    IDENT   shift, and go to state 53

    multiplicative_expr  go to state 125
    term                 go to state 59
    num_term             go to state 60
    id_term              go to state 61
    var                  go to state 62


State 100

   49 multiplicative_expr: term MOD . multiplicative_expr

    MINUS   shift, and go to state 50
    LPAREN  shift, and go to state 69
    NUMBER  shift, and go to state 52
    IDENT   shift, and go to state 53

    multiplicative_expr  go to state 126
    term                 go to state 59
    num_term             go to state 60
    id_term              go to state 61
    var                  go to state 62


State 101

   18 statement: WHILE bool_expr BEGINLOOP . statements ENDLOOP

    IF        shift, and go to state 34
    WHILE     shift, and go to state 35
    DO        shift, and go to state 36
    FOR       shift, and go to state 37
    CONTINUE  shift, and go to state 38
    READ      shift, and go to state 39
    WRITE     shift, and go to state 40
    RETURN    shift, and go to state 41
    IDENT     shift, and go to state 42

    statements  go to state 127
    statement   go to state 44
    var         go to state 45


State 102

   19 statement: DO BEGINLOOP statements . ENDLOOP WHILE bool_expr

    ENDLOOP  shift, and go to state 128


State 103

   20 statement: FOR var ASSIGN . NUMBER SEMICOLON bool_expr SEMICOLON var ASSIGN expression BEGINLOOP statements ENDLOOP

    NUMBER  shift, and go to state 129


State 104

   64 vars: var COMMA . vars

    IDENT  shift, and go to state 42

    vars  go to state 130
    var   go to state 67


State 105

   56 num_term: LPAREN expression . RPAREN

    RPAREN  shift, and go to state 114


State 106

   68 brack_expr: LBRACKET expression . RBRACKET

    RBRACKET  shift, and go to state 131


State 107

   67 var: IDENT brack_expr brack_expr .

    $default  reduce using rule 67 (var)


State 108

   14 statements: statement SEMICOLON statements .

    $default  reduce using rule 14 (statements)


State 109

   15 statement: var ASSIGN expression .

    $default  reduce using rule 15 (statement)


State 110

   36 relation_expr: NOT LPAREN bool_expr . RPAREN

    RPAREN  shift, and go to state 132


State 111

   30 relation_expr: NOT expression comp . expression

    MINUS   shift, and go to state 50
    LPAREN  shift, and go to state 69
    NUMBER  shift, and go to state 52
    IDENT   shift, and go to state 53

    expression           go to state 133
    multiplicative_expr  go to state 58
    term                 go to state 59
    num_term             go to state 60
    id_term              go to state 61
    var                  go to state 62


State 112

   57 num_term: MINUS LPAREN expression . RPAREN

    RPAREN  shift, and go to state 134


State 113

   35 relation_expr: LPAREN bool_expr RPAREN .

    $default  reduce using rule 35 (relation_expr)


State 114

   56 num_term: LPAREN expression RPAREN .

    $default  reduce using rule 56 (num_term)


State 115

   61 nonempty_expressions: expression .
   62                     | expression . COMMA nonempty_expressions

    COMMA  shift, and go to state 135

    $default  reduce using rule 61 (nonempty_expressions)


State 116

   58 id_term: IDENT LPAREN expressions . RPAREN

    RPAREN  shift, and go to state 136


State 117

   60 expressions: nonempty_expressions .

    $default  reduce using rule 60 (expressions)


State 118

   16 statement: IF bool_expr THEN statements . ENDIF
   17          | IF bool_expr THEN statements . ELSE statements ENDIF

    ENDIF  shift, and go to state 137
    ELSE   shift, and go to state 138


State 119

   26 bool_expr: relation_and_expr OR bool_expr .

    $default  reduce using rule 26 (bool_expr)


State 120

   28 relation_and_expr: relation_expr AND relation_and_expr .

    $default  reduce using rule 28 (relation_and_expr)


State 121

   29 relation_expr: expression comp expression .

    $default  reduce using rule 29 (relation_expr)


State 122

   45 expression: multiplicative_expr MINUS expression .

    $default  reduce using rule 45 (expression)


State 123

   44 expression: multiplicative_expr PLUS expression .

    $default  reduce using rule 44 (expression)


State 124

   47 multiplicative_expr: term MULT multiplicative_expr .

    $default  reduce using rule 47 (multiplicative_expr)


State 125

   48 multiplicative_expr: term DIV multiplicative_expr .

    $default  reduce using rule 48 (multiplicative_expr)


State 126

   49 multiplicative_expr: term MOD multiplicative_expr .

    $default  reduce using rule 49 (multiplicative_expr)


State 127

   18 statement: WHILE bool_expr BEGINLOOP statements . ENDLOOP

    ENDLOOP  shift, and go to state 139


State 128

   19 statement: DO BEGINLOOP statements ENDLOOP . WHILE bool_expr

    WHILE  shift, and go to state 140


State 129

   20 statement: FOR var ASSIGN NUMBER . SEMICOLON bool_expr SEMICOLON var ASSIGN expression BEGINLOOP statements ENDLOOP

    SEMICOLON  shift, and go to state 141


State 130

   64 vars: var COMMA vars .

    $default  reduce using rule 64 (vars)


State 131

   68 brack_expr: LBRACKET expression RBRACKET .

    $default  reduce using rule 68 (brack_expr)


State 132

   36 relation_expr: NOT LPAREN bool_expr RPAREN .

    $default  reduce using rule 36 (relation_expr)


State 133

   30 relation_expr: NOT expression comp expression .

    $default  reduce using rule 30 (relation_expr)


State 134

   57 num_term: MINUS LPAREN expression RPAREN .

    $default  reduce using rule 57 (num_term)


State 135

   62 nonempty_expressions: expression COMMA . nonempty_expressions

    MINUS   shift, and go to state 50
    LPAREN  shift, and go to state 69
    NUMBER  shift, and go to state 52
    IDENT   shift, and go to state 53

    expression            go to state 115
    multiplicative_expr   go to state 58
    term                  go to state 59
    num_term              go to state 60
    id_term               go to state 61
    nonempty_expressions  go to state 142
    var                   go to state 62


State 136

   58 id_term: IDENT LPAREN expressions RPAREN .

    $default  reduce using rule 58 (id_term)


State 137

   16 statement: IF bool_expr THEN statements ENDIF .

    $default  reduce using rule 16 (statement)


State 138

   17 statement: IF bool_expr THEN statements ELSE . statements ENDIF

    IF        shift, and go to state 34
    WHILE     shift, and go to state 35
    DO        shift, and go to state 36
    FOR       shift, and go to state 37
    CONTINUE  shift, and go to state 38
    READ      shift, and go to state 39
    WRITE     shift, and go to state 40
    RETURN    shift, and go to state 41
    IDENT     shift, and go to state 42

    statements  go to state 143
    statement   go to state 44
    var         go to state 45


State 139

   18 statement: WHILE bool_expr BEGINLOOP statements ENDLOOP .

    $default  reduce using rule 18 (statement)


State 140

   19 statement: DO BEGINLOOP statements ENDLOOP WHILE . bool_expr

    NOT     shift, and go to state 47
    TRUE    shift, and go to state 48
    FALSE   shift, and go to state 49
    MINUS   shift, and go to state 50
    LPAREN  shift, and go to state 51
    NUMBER  shift, and go to state 52
    IDENT   shift, and go to state 53

    bool_expr            go to state 144
    relation_and_expr    go to state 55
    relation_expr        go to state 56
    expression           go to state 57
    multiplicative_expr  go to state 58
    term                 go to state 59
    num_term             go to state 60
    id_term              go to state 61
    var                  go to state 62


State 141

   20 statement: FOR var ASSIGN NUMBER SEMICOLON . bool_expr SEMICOLON var ASSIGN expression BEGINLOOP statements ENDLOOP

    NOT     shift, and go to state 47
    TRUE    shift, and go to state 48
    FALSE   shift, and go to state 49
    MINUS   shift, and go to state 50
    LPAREN  shift, and go to state 51
    NUMBER  shift, and go to state 52
    IDENT   shift, and go to state 53

    bool_expr            go to state 145
    relation_and_expr    go to state 55
    relation_expr        go to state 56
    expression           go to state 57
    multiplicative_expr  go to state 58
    term                 go to state 59
    num_term             go to state 60
    id_term              go to state 61
    var                  go to state 62


State 142

   62 nonempty_expressions: expression COMMA nonempty_expressions .

    $default  reduce using rule 62 (nonempty_expressions)


State 143

   17 statement: IF bool_expr THEN statements ELSE statements . ENDIF

    ENDIF  shift, and go to state 146


State 144

   19 statement: DO BEGINLOOP statements ENDLOOP WHILE bool_expr .

    $default  reduce using rule 19 (statement)


State 145

   20 statement: FOR var ASSIGN NUMBER SEMICOLON bool_expr . SEMICOLON var ASSIGN expression BEGINLOOP statements ENDLOOP

    SEMICOLON  shift, and go to state 147


State 146

   17 statement: IF bool_expr THEN statements ELSE statements ENDIF .

    $default  reduce using rule 17 (statement)


State 147

   20 statement: FOR var ASSIGN NUMBER SEMICOLON bool_expr SEMICOLON . var ASSIGN expression BEGINLOOP statements ENDLOOP

    IDENT  shift, and go to state 42

    var  go to state 148


State 148

   20 statement: FOR var ASSIGN NUMBER SEMICOLON bool_expr SEMICOLON var . ASSIGN expression BEGINLOOP statements ENDLOOP

    ASSIGN  shift, and go to state 149


State 149

   20 statement: FOR var ASSIGN NUMBER SEMICOLON bool_expr SEMICOLON var ASSIGN . expression BEGINLOOP statements ENDLOOP

    MINUS   shift, and go to state 50
    LPAREN  shift, and go to state 69
    NUMBER  shift, and go to state 52
    IDENT   shift, and go to state 53

    expression           go to state 150
    multiplicative_expr  go to state 58
    term                 go to state 59
    num_term             go to state 60
    id_term              go to state 61
    var                  go to state 62


State 150

   20 statement: FOR var ASSIGN NUMBER SEMICOLON bool_expr SEMICOLON var ASSIGN expression . BEGINLOOP statements ENDLOOP

    BEGINLOOP  shift, and go to state 151


State 151

   20 statement: FOR var ASSIGN NUMBER SEMICOLON bool_expr SEMICOLON var ASSIGN expression BEGINLOOP . statements ENDLOOP

    IF        shift, and go to state 34
    WHILE     shift, and go to state 35
    DO        shift, and go to state 36
    FOR       shift, and go to state 37
    CONTINUE  shift, and go to state 38
    READ      shift, and go to state 39
    WRITE     shift, and go to state 40
    RETURN    shift, and go to state 41
    IDENT     shift, and go to state 42

    statements  go to state 152
    statement   go to state 44
    var         go to state 45


State 152

   20 statement: FOR var ASSIGN NUMBER SEMICOLON bool_expr SEMICOLON var ASSIGN expression BEGINLOOP statements . ENDLOOP

    ENDLOOP  shift, and go to state 153


State 153

   20 statement: FOR var ASSIGN NUMBER SEMICOLON bool_expr SEMICOLON var ASSIGN expression BEGINLOOP statements ENDLOOP .

    $default  reduce using rule 20 (statement)
