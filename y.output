Rules useless in parser due to conflicts

   28 more-relation-and-exprs: %empty

   69 more-vars: %empty


State 46 conflicts: 1 shift/reduce
State 50 conflicts: 1 shift/reduce
State 53 conflicts: 1 shift/reduce
State 54 conflicts: 1 shift/reduce
State 55 conflicts: 2 shift/reduce
State 61 conflicts: 1 shift/reduce
State 73 conflicts: 1 shift/reduce
State 91 conflicts: 1 shift/reduce
State 92 conflicts: 1 shift/reduce
State 93 conflicts: 1 shift/reduce
State 95 conflicts: 1 shift/reduce
State 96 conflicts: 1 shift/reduce
State 97 conflicts: 1 shift/reduce
State 100 conflicts: 1 shift/reduce
State 106 conflicts: 1 shift/reduce
State 117 conflicts: 1 shift/reduce
State 121 conflicts: 1 shift/reduce
State 144 conflicts: 1 shift/reduce
State 162 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: functions

    2 functions: %empty
    3          | function functions

    4 function: FUNCTION IDENT SEMICOLON BEGINPARAMS declarations ENDPARAMS BEGINLOCALS declarations ENDLOCALS BEGINBODY statements ENDBODY

    5 declarations: %empty
    6             | declaration SEMICOLON declarations

    7 declaration: ids COLON INT
    8            | ids ARRAY arr OF INT
    9            | ids ARRAY arr arr OF INT

   10 arr: LBRACKET NUMBER RBRACKET

   11 ids: IDENT more-ids COLON

   12 more-ids: %empty
   13         | COMMA IDENT more-ids

   14 statements: statement SEMICOLON
   15           | statement statements

   16 statement: var ASSIGN expression
   17          | IF bool-expr THEN statements ENDIF
   18          | IF bool-expr THEN statements ELSE statements ENDIF
   19          | WHILE bool-expr BEGINLOOP statements ENDLOOP
   20          | DO BEGINLOOP statements ENDLOOP WHILE bool-expr
   21          | FOR var ASSIGN NUMBER SEMICOLON bool-expr SEMICOLON var ASSIGN expression BEGINLOOP statements ENDLOOP
   22          | READ vars
   23          | WRITE vars
   24          | CONTINUE
   25          | RETURN expression

   26 bool-expr: relation-and-expr
   27          | relation-and-expr more-relation-and-exprs OR relation-and-expr

   28 more-relation-and-exprs: %empty
   29                        | OR relation-and-expr more-relation-and-exprs

   30 relation-and-expr: relation-expr
   31                  | relation-expr more-relation-exprs AND relation-expr

   32 more-relation-exprs: %empty
   33                    | AND relation-expr more-relation-exprs relation-expr

   34 relation-expr: optional-not expression comp expression
   35              | optional-not TRUE
   36              | optional-not FALSE
   37              | optional-not LPAREN bool-expr RPAREN

   38 $@1: %empty

   39 optional-not: $@1 NOT

   40 comp: EQ
   41     | NEQ
   42     | LT
   43     | GT
   44     | LE
   45     | GE

   46 expression: multiplicative-expr more-multiplicative-exprs

   47 more-multiplicative-exprs: %empty
   48                          | PLUS multiplicative-expr more-multiplicative-exprs
   49                          | MINUS multiplicative-expr more-multiplicative-exprs

   50 multiplicative-expr: term more-terms

   51 more-terms: %empty
   52           | MULT term more-terms
   53           | DIV term more-terms
   54           | MOD term more-terms

   55 term: optional-neg num-term
   56     | id-term

   57 optional-neg: %empty
   58             | MINUS

   59 num-term: var
   60         | NUMBER
   61         | LPAREN expression RPAREN

   62 id-term: IDENT LPAREN expressions RPAREN

   63 expressions: %empty
   64            | expression more-expressions

   65 more-expressions: %empty
   66                 | COMMA expression more-expressions

   67 vars: var
   68     | var more-vars COMMA var

   69 more-vars: %empty
   70          | COMMA var more-vars

   71 var: IDENT
   72    | IDENT brack-expr
   73    | IDENT brack-expr brack-expr

   74 brack-expr: LBRACKET expression RBRACKET


Terminals, with rules where they appear

$end (0) 0
error (256)
FUNCTION (258) 4
SEMICOLON (259) 4 6 14 21
IDENT (260) 4 11 13 62 71 72 73
NUMBER (261) 10 21 60
BEGINPARAMS (262) 4
ENDPARAMS (263) 4
BEGINLOCALS (264) 4
ENDLOCALS (265) 4
BEGINBODY (266) 4
ENDBODY (267) 4
COMMA (268) 13 66 68 70
COLON (269) 7 11
INT (270) 7 8 9
ARRAY (271) 8 9
LBRACKET (272) 10 74
RBRACKET (273) 10 74
OF (274) 8 9
ASSIGN (275) 16 21
IF (276) 17 18
THEN (277) 17 18
ELSE (278) 18
ENDIF (279) 17 18
WHILE (280) 19 20
BEGINLOOP (281) 19 20 21
ENDLOOP (282) 19 20 21
DO (283) 20
FOR (284) 21
READ (285) 22
WRITE (286) 23
CONTINUE (287) 24
RETURN (288) 25
OR (289) 27 29
AND (290) 31 33
NOT (291) 39
TRUE (292) 35
FALSE (293) 36
LPAREN (294) 37 61 62
RPAREN (295) 37 61 62
EQ (296) 40
NEQ (297) 41
LE (298) 44
GE (299) 45
LT (300) 42
GT (301) 43
PLUS (302) 48
MINUS (303) 49 58
MULT (304) 52
DIV (305) 53
MOD (306) 54


Nonterminals, with rules where they appear

$accept (52)
    on left: 0
program (53)
    on left: 1, on right: 0
functions (54)
    on left: 2 3, on right: 1 3
function (55)
    on left: 4, on right: 3
declarations (56)
    on left: 5 6, on right: 4 6
declaration (57)
    on left: 7 8 9, on right: 6
arr (58)
    on left: 10, on right: 8 9
ids (59)
    on left: 11, on right: 7 8 9
more-ids (60)
    on left: 12 13, on right: 11 13
statements (61)
    on left: 14 15, on right: 4 15 17 18 19 20 21
statement (62)
    on left: 16 17 18 19 20 21 22 23 24 25, on right: 14 15
bool-expr (63)
    on left: 26 27, on right: 17 18 19 20 21 37
more-relation-and-exprs (64)
    on left: 28 29, on right: 27 29
relation-and-expr (65)
    on left: 30 31, on right: 26 27 29
more-relation-exprs (66)
    on left: 32 33, on right: 31 33
relation-expr (67)
    on left: 34 35 36 37, on right: 30 31 33
optional-not (68)
    on left: 39, on right: 34 35 36 37
$@1 (69)
    on left: 38, on right: 39
comp (70)
    on left: 40 41 42 43 44 45, on right: 34
expression (71)
    on left: 46, on right: 16 21 25 34 61 64 66 74
more-multiplicative-exprs (72)
    on left: 47 48 49, on right: 46 48 49
multiplicative-expr (73)
    on left: 50, on right: 46 48 49
more-terms (74)
    on left: 51 52 53 54, on right: 50 52 53 54
term (75)
    on left: 55 56, on right: 50 52 53 54
optional-neg (76)
    on left: 57 58, on right: 55
num-term (77)
    on left: 59 60 61, on right: 55
id-term (78)
    on left: 62, on right: 56
expressions (79)
    on left: 63 64, on right: 62
more-expressions (80)
    on left: 65 66, on right: 64 66
vars (81)
    on left: 67 68, on right: 22 23
more-vars (82)
    on left: 69 70, on right: 68 70
var (83)
    on left: 71 72 73, on right: 16 21 59 67 68 70
brack-expr (84)
    on left: 74, on right: 72 73


State 0

    0 $accept: . program $end

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 2 (functions)

    program    go to state 2
    functions  go to state 3
    function   go to state 4


State 1

    4 function: FUNCTION . IDENT SEMICOLON BEGINPARAMS declarations ENDPARAMS BEGINLOCALS declarations ENDLOCALS BEGINBODY statements ENDBODY

    IDENT  shift, and go to state 5


State 2

    0 $accept: program . $end

    $end  shift, and go to state 6


State 3

    1 program: functions .

    $default  reduce using rule 1 (program)


State 4

    3 functions: function . functions

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 2 (functions)

    functions  go to state 7
    function   go to state 4


State 5

    4 function: FUNCTION IDENT . SEMICOLON BEGINPARAMS declarations ENDPARAMS BEGINLOCALS declarations ENDLOCALS BEGINBODY statements ENDBODY

    SEMICOLON  shift, and go to state 8


State 6

    0 $accept: program $end .

    $default  accept


State 7

    3 functions: function functions .

    $default  reduce using rule 3 (functions)


State 8

    4 function: FUNCTION IDENT SEMICOLON . BEGINPARAMS declarations ENDPARAMS BEGINLOCALS declarations ENDLOCALS BEGINBODY statements ENDBODY

    BEGINPARAMS  shift, and go to state 9


State 9

    4 function: FUNCTION IDENT SEMICOLON BEGINPARAMS . declarations ENDPARAMS BEGINLOCALS declarations ENDLOCALS BEGINBODY statements ENDBODY

    IDENT  shift, and go to state 10

    $default  reduce using rule 5 (declarations)

    declarations  go to state 11
    declaration   go to state 12
    ids           go to state 13


State 10

   11 ids: IDENT . more-ids COLON

    COMMA  shift, and go to state 14

    $default  reduce using rule 12 (more-ids)

    more-ids  go to state 15


State 11

    4 function: FUNCTION IDENT SEMICOLON BEGINPARAMS declarations . ENDPARAMS BEGINLOCALS declarations ENDLOCALS BEGINBODY statements ENDBODY

    ENDPARAMS  shift, and go to state 16


State 12

    6 declarations: declaration . SEMICOLON declarations

    SEMICOLON  shift, and go to state 17


State 13

    7 declaration: ids . COLON INT
    8            | ids . ARRAY arr OF INT
    9            | ids . ARRAY arr arr OF INT

    COLON  shift, and go to state 18
    ARRAY  shift, and go to state 19


State 14

   13 more-ids: COMMA . IDENT more-ids

    IDENT  shift, and go to state 20


State 15

   11 ids: IDENT more-ids . COLON

    COLON  shift, and go to state 21


State 16

    4 function: FUNCTION IDENT SEMICOLON BEGINPARAMS declarations ENDPARAMS . BEGINLOCALS declarations ENDLOCALS BEGINBODY statements ENDBODY

    BEGINLOCALS  shift, and go to state 22


State 17

    6 declarations: declaration SEMICOLON . declarations

    IDENT  shift, and go to state 10

    $default  reduce using rule 5 (declarations)

    declarations  go to state 23
    declaration   go to state 12
    ids           go to state 13


State 18

    7 declaration: ids COLON . INT

    INT  shift, and go to state 24


State 19

    8 declaration: ids ARRAY . arr OF INT
    9            | ids ARRAY . arr arr OF INT

    LBRACKET  shift, and go to state 25

    arr  go to state 26


State 20

   13 more-ids: COMMA IDENT . more-ids

    COMMA  shift, and go to state 14

    $default  reduce using rule 12 (more-ids)

    more-ids  go to state 27


State 21

   11 ids: IDENT more-ids COLON .

    $default  reduce using rule 11 (ids)


State 22

    4 function: FUNCTION IDENT SEMICOLON BEGINPARAMS declarations ENDPARAMS BEGINLOCALS . declarations ENDLOCALS BEGINBODY statements ENDBODY

    IDENT  shift, and go to state 10

    $default  reduce using rule 5 (declarations)

    declarations  go to state 28
    declaration   go to state 12
    ids           go to state 13


State 23

    6 declarations: declaration SEMICOLON declarations .

    $default  reduce using rule 6 (declarations)


State 24

    7 declaration: ids COLON INT .

    $default  reduce using rule 7 (declaration)


State 25

   10 arr: LBRACKET . NUMBER RBRACKET

    NUMBER  shift, and go to state 29


State 26

    8 declaration: ids ARRAY arr . OF INT
    9            | ids ARRAY arr . arr OF INT

    LBRACKET  shift, and go to state 25
    OF        shift, and go to state 30

    arr  go to state 31


State 27

   13 more-ids: COMMA IDENT more-ids .

    $default  reduce using rule 13 (more-ids)


State 28

    4 function: FUNCTION IDENT SEMICOLON BEGINPARAMS declarations ENDPARAMS BEGINLOCALS declarations . ENDLOCALS BEGINBODY statements ENDBODY

    ENDLOCALS  shift, and go to state 32


State 29

   10 arr: LBRACKET NUMBER . RBRACKET

    RBRACKET  shift, and go to state 33


State 30

    8 declaration: ids ARRAY arr OF . INT

    INT  shift, and go to state 34


State 31

    9 declaration: ids ARRAY arr arr . OF INT

    OF  shift, and go to state 35


State 32

    4 function: FUNCTION IDENT SEMICOLON BEGINPARAMS declarations ENDPARAMS BEGINLOCALS declarations ENDLOCALS . BEGINBODY statements ENDBODY

    BEGINBODY  shift, and go to state 36


State 33

   10 arr: LBRACKET NUMBER RBRACKET .

    $default  reduce using rule 10 (arr)


State 34

    8 declaration: ids ARRAY arr OF INT .

    $default  reduce using rule 8 (declaration)


State 35

    9 declaration: ids ARRAY arr arr OF . INT

    INT  shift, and go to state 37


State 36

    4 function: FUNCTION IDENT SEMICOLON BEGINPARAMS declarations ENDPARAMS BEGINLOCALS declarations ENDLOCALS BEGINBODY . statements ENDBODY

    IDENT     shift, and go to state 38
    IF        shift, and go to state 39
    WHILE     shift, and go to state 40
    DO        shift, and go to state 41
    FOR       shift, and go to state 42
    READ      shift, and go to state 43
    WRITE     shift, and go to state 44
    CONTINUE  shift, and go to state 45
    RETURN    shift, and go to state 46

    statements  go to state 47
    statement   go to state 48
    var         go to state 49


State 37

    9 declaration: ids ARRAY arr arr OF INT .

    $default  reduce using rule 9 (declaration)


State 38

   71 var: IDENT .
   72    | IDENT . brack-expr
   73    | IDENT . brack-expr brack-expr

    LBRACKET  shift, and go to state 50

    $default  reduce using rule 71 (var)

    brack-expr  go to state 51


State 39

   17 statement: IF . bool-expr THEN statements ENDIF
   18          | IF . bool-expr THEN statements ELSE statements ENDIF

    $default  reduce using rule 38 ($@1)

    bool-expr          go to state 52
    relation-and-expr  go to state 53
    relation-expr      go to state 54
    optional-not       go to state 55
    $@1                go to state 56


State 40

   19 statement: WHILE . bool-expr BEGINLOOP statements ENDLOOP

    $default  reduce using rule 38 ($@1)

    bool-expr          go to state 57
    relation-and-expr  go to state 53
    relation-expr      go to state 54
    optional-not       go to state 55
    $@1                go to state 56


State 41

   20 statement: DO . BEGINLOOP statements ENDLOOP WHILE bool-expr

    BEGINLOOP  shift, and go to state 58


State 42

   21 statement: FOR . var ASSIGN NUMBER SEMICOLON bool-expr SEMICOLON var ASSIGN expression BEGINLOOP statements ENDLOOP

    IDENT  shift, and go to state 38

    var  go to state 59


State 43

   22 statement: READ . vars

    IDENT  shift, and go to state 38

    vars  go to state 60
    var   go to state 61


State 44

   23 statement: WRITE . vars

    IDENT  shift, and go to state 38

    vars  go to state 62
    var   go to state 61


State 45

   24 statement: CONTINUE .

    $default  reduce using rule 24 (statement)


State 46

   25 statement: RETURN . expression

    IDENT  shift, and go to state 63
    MINUS  shift, and go to state 64

    IDENT     [reduce using rule 57 (optional-neg)]
    $default  reduce using rule 57 (optional-neg)

    expression           go to state 65
    multiplicative-expr  go to state 66
    term                 go to state 67
    optional-neg         go to state 68
    id-term              go to state 69


State 47

    4 function: FUNCTION IDENT SEMICOLON BEGINPARAMS declarations ENDPARAMS BEGINLOCALS declarations ENDLOCALS BEGINBODY statements . ENDBODY

    ENDBODY  shift, and go to state 70


State 48

   14 statements: statement . SEMICOLON
   15           | statement . statements

    SEMICOLON  shift, and go to state 71
    IDENT      shift, and go to state 38
    IF         shift, and go to state 39
    WHILE      shift, and go to state 40
    DO         shift, and go to state 41
    FOR        shift, and go to state 42
    READ       shift, and go to state 43
    WRITE      shift, and go to state 44
    CONTINUE   shift, and go to state 45
    RETURN     shift, and go to state 46

    statements  go to state 72
    statement   go to state 48
    var         go to state 49


State 49

   16 statement: var . ASSIGN expression

    ASSIGN  shift, and go to state 73


State 50

   74 brack-expr: LBRACKET . expression RBRACKET

    IDENT  shift, and go to state 63
    MINUS  shift, and go to state 64

    IDENT     [reduce using rule 57 (optional-neg)]
    $default  reduce using rule 57 (optional-neg)

    expression           go to state 74
    multiplicative-expr  go to state 66
    term                 go to state 67
    optional-neg         go to state 68
    id-term              go to state 69


State 51

   72 var: IDENT brack-expr .
   73    | IDENT brack-expr . brack-expr

    LBRACKET  shift, and go to state 50

    $default  reduce using rule 72 (var)

    brack-expr  go to state 75


State 52

   17 statement: IF bool-expr . THEN statements ENDIF
   18          | IF bool-expr . THEN statements ELSE statements ENDIF

    THEN  shift, and go to state 76


State 53

   26 bool-expr: relation-and-expr .
   27          | relation-and-expr . more-relation-and-exprs OR relation-and-expr

    OR  shift, and go to state 77

    OR        [reduce using rule 28 (more-relation-and-exprs)]
    $default  reduce using rule 26 (bool-expr)

    more-relation-and-exprs  go to state 78


State 54

   30 relation-and-expr: relation-expr .
   31                  | relation-expr . more-relation-exprs AND relation-expr

    AND  shift, and go to state 79

    AND       [reduce using rule 32 (more-relation-exprs)]
    $default  reduce using rule 30 (relation-and-expr)

    more-relation-exprs  go to state 80


State 55

   34 relation-expr: optional-not . expression comp expression
   35              | optional-not . TRUE
   36              | optional-not . FALSE
   37              | optional-not . LPAREN bool-expr RPAREN

    IDENT   shift, and go to state 63
    TRUE    shift, and go to state 81
    FALSE   shift, and go to state 82
    LPAREN  shift, and go to state 83
    MINUS   shift, and go to state 64

    IDENT     [reduce using rule 57 (optional-neg)]
    LPAREN    [reduce using rule 57 (optional-neg)]
    $default  reduce using rule 57 (optional-neg)

    expression           go to state 84
    multiplicative-expr  go to state 66
    term                 go to state 67
    optional-neg         go to state 68
    id-term              go to state 69


State 56

   39 optional-not: $@1 . NOT

    NOT  shift, and go to state 85


State 57

   19 statement: WHILE bool-expr . BEGINLOOP statements ENDLOOP

    BEGINLOOP  shift, and go to state 86


State 58

   20 statement: DO BEGINLOOP . statements ENDLOOP WHILE bool-expr

    IDENT     shift, and go to state 38
    IF        shift, and go to state 39
    WHILE     shift, and go to state 40
    DO        shift, and go to state 41
    FOR       shift, and go to state 42
    READ      shift, and go to state 43
    WRITE     shift, and go to state 44
    CONTINUE  shift, and go to state 45
    RETURN    shift, and go to state 46

    statements  go to state 87
    statement   go to state 48
    var         go to state 49


State 59

   21 statement: FOR var . ASSIGN NUMBER SEMICOLON bool-expr SEMICOLON var ASSIGN expression BEGINLOOP statements ENDLOOP

    ASSIGN  shift, and go to state 88


State 60

   22 statement: READ vars .

    $default  reduce using rule 22 (statement)


State 61

   67 vars: var .
   68     | var . more-vars COMMA var

    COMMA  shift, and go to state 89

    COMMA     [reduce using rule 69 (more-vars)]
    $default  reduce using rule 67 (vars)

    more-vars  go to state 90


State 62

   23 statement: WRITE vars .

    $default  reduce using rule 23 (statement)


State 63

   62 id-term: IDENT . LPAREN expressions RPAREN

    LPAREN  shift, and go to state 91


State 64

   58 optional-neg: MINUS .

    $default  reduce using rule 58 (optional-neg)


State 65

   25 statement: RETURN expression .

    $default  reduce using rule 25 (statement)


State 66

   46 expression: multiplicative-expr . more-multiplicative-exprs

    PLUS   shift, and go to state 92
    MINUS  shift, and go to state 93

    $default  reduce using rule 47 (more-multiplicative-exprs)

    more-multiplicative-exprs  go to state 94


State 67

   50 multiplicative-expr: term . more-terms

    MULT  shift, and go to state 95
    DIV   shift, and go to state 96
    MOD   shift, and go to state 97

    $default  reduce using rule 51 (more-terms)

    more-terms  go to state 98


State 68

   55 term: optional-neg . num-term

    IDENT   shift, and go to state 38
    NUMBER  shift, and go to state 99
    LPAREN  shift, and go to state 100

    num-term  go to state 101
    var       go to state 102


State 69

   56 term: id-term .

    $default  reduce using rule 56 (term)


State 70

    4 function: FUNCTION IDENT SEMICOLON BEGINPARAMS declarations ENDPARAMS BEGINLOCALS declarations ENDLOCALS BEGINBODY statements ENDBODY .

    $default  reduce using rule 4 (function)


State 71

   14 statements: statement SEMICOLON .

    $default  reduce using rule 14 (statements)


State 72

   15 statements: statement statements .

    $default  reduce using rule 15 (statements)


State 73

   16 statement: var ASSIGN . expression

    IDENT  shift, and go to state 63
    MINUS  shift, and go to state 64

    IDENT     [reduce using rule 57 (optional-neg)]
    $default  reduce using rule 57 (optional-neg)

    expression           go to state 103
    multiplicative-expr  go to state 66
    term                 go to state 67
    optional-neg         go to state 68
    id-term              go to state 69


State 74

   74 brack-expr: LBRACKET expression . RBRACKET

    RBRACKET  shift, and go to state 104


State 75

   73 var: IDENT brack-expr brack-expr .

    $default  reduce using rule 73 (var)


State 76

   17 statement: IF bool-expr THEN . statements ENDIF
   18          | IF bool-expr THEN . statements ELSE statements ENDIF

    IDENT     shift, and go to state 38
    IF        shift, and go to state 39
    WHILE     shift, and go to state 40
    DO        shift, and go to state 41
    FOR       shift, and go to state 42
    READ      shift, and go to state 43
    WRITE     shift, and go to state 44
    CONTINUE  shift, and go to state 45
    RETURN    shift, and go to state 46

    statements  go to state 105
    statement   go to state 48
    var         go to state 49


State 77

   29 more-relation-and-exprs: OR . relation-and-expr more-relation-and-exprs

    $default  reduce using rule 38 ($@1)

    relation-and-expr  go to state 106
    relation-expr      go to state 54
    optional-not       go to state 55
    $@1                go to state 56


State 78

   27 bool-expr: relation-and-expr more-relation-and-exprs . OR relation-and-expr

    OR  shift, and go to state 107


State 79

   33 more-relation-exprs: AND . relation-expr more-relation-exprs relation-expr

    $default  reduce using rule 38 ($@1)

    relation-expr  go to state 108
    optional-not   go to state 55
    $@1            go to state 56


State 80

   31 relation-and-expr: relation-expr more-relation-exprs . AND relation-expr

    AND  shift, and go to state 109


State 81

   35 relation-expr: optional-not TRUE .

    $default  reduce using rule 35 (relation-expr)


State 82

   36 relation-expr: optional-not FALSE .

    $default  reduce using rule 36 (relation-expr)


State 83

   37 relation-expr: optional-not LPAREN . bool-expr RPAREN

    $default  reduce using rule 38 ($@1)

    bool-expr          go to state 110
    relation-and-expr  go to state 53
    relation-expr      go to state 54
    optional-not       go to state 55
    $@1                go to state 56


State 84

   34 relation-expr: optional-not expression . comp expression

    EQ   shift, and go to state 111
    NEQ  shift, and go to state 112
    LE   shift, and go to state 113
    GE   shift, and go to state 114
    LT   shift, and go to state 115
    GT   shift, and go to state 116

    comp  go to state 117


State 85

   39 optional-not: $@1 NOT .

    $default  reduce using rule 39 (optional-not)


State 86

   19 statement: WHILE bool-expr BEGINLOOP . statements ENDLOOP

    IDENT     shift, and go to state 38
    IF        shift, and go to state 39
    WHILE     shift, and go to state 40
    DO        shift, and go to state 41
    FOR       shift, and go to state 42
    READ      shift, and go to state 43
    WRITE     shift, and go to state 44
    CONTINUE  shift, and go to state 45
    RETURN    shift, and go to state 46

    statements  go to state 118
    statement   go to state 48
    var         go to state 49


State 87

   20 statement: DO BEGINLOOP statements . ENDLOOP WHILE bool-expr

    ENDLOOP  shift, and go to state 119


State 88

   21 statement: FOR var ASSIGN . NUMBER SEMICOLON bool-expr SEMICOLON var ASSIGN expression BEGINLOOP statements ENDLOOP

    NUMBER  shift, and go to state 120


State 89

   70 more-vars: COMMA . var more-vars

    IDENT  shift, and go to state 38

    var  go to state 121


State 90

   68 vars: var more-vars . COMMA var

    COMMA  shift, and go to state 122


State 91

   62 id-term: IDENT LPAREN . expressions RPAREN

    IDENT  shift, and go to state 63
    MINUS  shift, and go to state 64

    IDENT     [reduce using rule 57 (optional-neg)]
    RPAREN    reduce using rule 63 (expressions)
    $default  reduce using rule 57 (optional-neg)

    expression           go to state 123
    multiplicative-expr  go to state 66
    term                 go to state 67
    optional-neg         go to state 68
    id-term              go to state 69
    expressions          go to state 124


State 92

   48 more-multiplicative-exprs: PLUS . multiplicative-expr more-multiplicative-exprs

    IDENT  shift, and go to state 63
    MINUS  shift, and go to state 64

    IDENT     [reduce using rule 57 (optional-neg)]
    $default  reduce using rule 57 (optional-neg)

    multiplicative-expr  go to state 125
    term                 go to state 67
    optional-neg         go to state 68
    id-term              go to state 69


State 93

   49 more-multiplicative-exprs: MINUS . multiplicative-expr more-multiplicative-exprs

    IDENT  shift, and go to state 63
    MINUS  shift, and go to state 64

    IDENT     [reduce using rule 57 (optional-neg)]
    $default  reduce using rule 57 (optional-neg)

    multiplicative-expr  go to state 126
    term                 go to state 67
    optional-neg         go to state 68
    id-term              go to state 69


State 94

   46 expression: multiplicative-expr more-multiplicative-exprs .

    $default  reduce using rule 46 (expression)


State 95

   52 more-terms: MULT . term more-terms

    IDENT  shift, and go to state 63
    MINUS  shift, and go to state 64

    IDENT     [reduce using rule 57 (optional-neg)]
    $default  reduce using rule 57 (optional-neg)

    term          go to state 127
    optional-neg  go to state 68
    id-term       go to state 69


State 96

   53 more-terms: DIV . term more-terms

    IDENT  shift, and go to state 63
    MINUS  shift, and go to state 64

    IDENT     [reduce using rule 57 (optional-neg)]
    $default  reduce using rule 57 (optional-neg)

    term          go to state 128
    optional-neg  go to state 68
    id-term       go to state 69


State 97

   54 more-terms: MOD . term more-terms

    IDENT  shift, and go to state 63
    MINUS  shift, and go to state 64

    IDENT     [reduce using rule 57 (optional-neg)]
    $default  reduce using rule 57 (optional-neg)

    term          go to state 129
    optional-neg  go to state 68
    id-term       go to state 69


State 98

   50 multiplicative-expr: term more-terms .

    $default  reduce using rule 50 (multiplicative-expr)


State 99

   60 num-term: NUMBER .

    $default  reduce using rule 60 (num-term)


State 100

   61 num-term: LPAREN . expression RPAREN

    IDENT  shift, and go to state 63
    MINUS  shift, and go to state 64

    IDENT     [reduce using rule 57 (optional-neg)]
    $default  reduce using rule 57 (optional-neg)

    expression           go to state 130
    multiplicative-expr  go to state 66
    term                 go to state 67
    optional-neg         go to state 68
    id-term              go to state 69


State 101

   55 term: optional-neg num-term .

    $default  reduce using rule 55 (term)


State 102

   59 num-term: var .

    $default  reduce using rule 59 (num-term)


State 103

   16 statement: var ASSIGN expression .

    $default  reduce using rule 16 (statement)


State 104

   74 brack-expr: LBRACKET expression RBRACKET .

    $default  reduce using rule 74 (brack-expr)


State 105

   17 statement: IF bool-expr THEN statements . ENDIF
   18          | IF bool-expr THEN statements . ELSE statements ENDIF

    ELSE   shift, and go to state 131
    ENDIF  shift, and go to state 132


State 106

   29 more-relation-and-exprs: OR relation-and-expr . more-relation-and-exprs

    OR  shift, and go to state 77

    OR  [reduce using rule 28 (more-relation-and-exprs)]

    more-relation-and-exprs  go to state 133


State 107

   27 bool-expr: relation-and-expr more-relation-and-exprs OR . relation-and-expr

    $default  reduce using rule 38 ($@1)

    relation-and-expr  go to state 134
    relation-expr      go to state 54
    optional-not       go to state 55
    $@1                go to state 56


State 108

   33 more-relation-exprs: AND relation-expr . more-relation-exprs relation-expr

    AND  shift, and go to state 79

    $default  reduce using rule 32 (more-relation-exprs)

    more-relation-exprs  go to state 135


State 109

   31 relation-and-expr: relation-expr more-relation-exprs AND . relation-expr

    $default  reduce using rule 38 ($@1)

    relation-expr  go to state 136
    optional-not   go to state 55
    $@1            go to state 56


State 110

   37 relation-expr: optional-not LPAREN bool-expr . RPAREN

    RPAREN  shift, and go to state 137


State 111

   40 comp: EQ .

    $default  reduce using rule 40 (comp)


State 112

   41 comp: NEQ .

    $default  reduce using rule 41 (comp)


State 113

   44 comp: LE .

    $default  reduce using rule 44 (comp)


State 114

   45 comp: GE .

    $default  reduce using rule 45 (comp)


State 115

   42 comp: LT .

    $default  reduce using rule 42 (comp)


State 116

   43 comp: GT .

    $default  reduce using rule 43 (comp)


State 117

   34 relation-expr: optional-not expression comp . expression

    IDENT  shift, and go to state 63
    MINUS  shift, and go to state 64

    IDENT     [reduce using rule 57 (optional-neg)]
    $default  reduce using rule 57 (optional-neg)

    expression           go to state 138
    multiplicative-expr  go to state 66
    term                 go to state 67
    optional-neg         go to state 68
    id-term              go to state 69


State 118

   19 statement: WHILE bool-expr BEGINLOOP statements . ENDLOOP

    ENDLOOP  shift, and go to state 139


State 119

   20 statement: DO BEGINLOOP statements ENDLOOP . WHILE bool-expr

    WHILE  shift, and go to state 140


State 120

   21 statement: FOR var ASSIGN NUMBER . SEMICOLON bool-expr SEMICOLON var ASSIGN expression BEGINLOOP statements ENDLOOP

    SEMICOLON  shift, and go to state 141


State 121

   70 more-vars: COMMA var . more-vars

    COMMA  shift, and go to state 89

    COMMA  [reduce using rule 69 (more-vars)]

    more-vars  go to state 142


State 122

   68 vars: var more-vars COMMA . var

    IDENT  shift, and go to state 38

    var  go to state 143


State 123

   64 expressions: expression . more-expressions

    COMMA  shift, and go to state 144

    $default  reduce using rule 65 (more-expressions)

    more-expressions  go to state 145


State 124

   62 id-term: IDENT LPAREN expressions . RPAREN

    RPAREN  shift, and go to state 146


State 125

   48 more-multiplicative-exprs: PLUS multiplicative-expr . more-multiplicative-exprs

    PLUS   shift, and go to state 92
    MINUS  shift, and go to state 93

    $default  reduce using rule 47 (more-multiplicative-exprs)

    more-multiplicative-exprs  go to state 147


State 126

   49 more-multiplicative-exprs: MINUS multiplicative-expr . more-multiplicative-exprs

    PLUS   shift, and go to state 92
    MINUS  shift, and go to state 93

    $default  reduce using rule 47 (more-multiplicative-exprs)

    more-multiplicative-exprs  go to state 148


State 127

   52 more-terms: MULT term . more-terms

    MULT  shift, and go to state 95
    DIV   shift, and go to state 96
    MOD   shift, and go to state 97

    $default  reduce using rule 51 (more-terms)

    more-terms  go to state 149


State 128

   53 more-terms: DIV term . more-terms

    MULT  shift, and go to state 95
    DIV   shift, and go to state 96
    MOD   shift, and go to state 97

    $default  reduce using rule 51 (more-terms)

    more-terms  go to state 150


State 129

   54 more-terms: MOD term . more-terms

    MULT  shift, and go to state 95
    DIV   shift, and go to state 96
    MOD   shift, and go to state 97

    $default  reduce using rule 51 (more-terms)

    more-terms  go to state 151


State 130

   61 num-term: LPAREN expression . RPAREN

    RPAREN  shift, and go to state 152


State 131

   18 statement: IF bool-expr THEN statements ELSE . statements ENDIF

    IDENT     shift, and go to state 38
    IF        shift, and go to state 39
    WHILE     shift, and go to state 40
    DO        shift, and go to state 41
    FOR       shift, and go to state 42
    READ      shift, and go to state 43
    WRITE     shift, and go to state 44
    CONTINUE  shift, and go to state 45
    RETURN    shift, and go to state 46

    statements  go to state 153
    statement   go to state 48
    var         go to state 49


State 132

   17 statement: IF bool-expr THEN statements ENDIF .

    $default  reduce using rule 17 (statement)


State 133

   29 more-relation-and-exprs: OR relation-and-expr more-relation-and-exprs .

    $default  reduce using rule 29 (more-relation-and-exprs)


State 134

   27 bool-expr: relation-and-expr more-relation-and-exprs OR relation-and-expr .

    $default  reduce using rule 27 (bool-expr)


State 135

   33 more-relation-exprs: AND relation-expr more-relation-exprs . relation-expr

    $default  reduce using rule 38 ($@1)

    relation-expr  go to state 154
    optional-not   go to state 55
    $@1            go to state 56


State 136

   31 relation-and-expr: relation-expr more-relation-exprs AND relation-expr .

    $default  reduce using rule 31 (relation-and-expr)


State 137

   37 relation-expr: optional-not LPAREN bool-expr RPAREN .

    $default  reduce using rule 37 (relation-expr)


State 138

   34 relation-expr: optional-not expression comp expression .

    $default  reduce using rule 34 (relation-expr)


State 139

   19 statement: WHILE bool-expr BEGINLOOP statements ENDLOOP .

    $default  reduce using rule 19 (statement)


State 140

   20 statement: DO BEGINLOOP statements ENDLOOP WHILE . bool-expr

    $default  reduce using rule 38 ($@1)

    bool-expr          go to state 155
    relation-and-expr  go to state 53
    relation-expr      go to state 54
    optional-not       go to state 55
    $@1                go to state 56


State 141

   21 statement: FOR var ASSIGN NUMBER SEMICOLON . bool-expr SEMICOLON var ASSIGN expression BEGINLOOP statements ENDLOOP

    $default  reduce using rule 38 ($@1)

    bool-expr          go to state 156
    relation-and-expr  go to state 53
    relation-expr      go to state 54
    optional-not       go to state 55
    $@1                go to state 56


State 142

   70 more-vars: COMMA var more-vars .

    $default  reduce using rule 70 (more-vars)


State 143

   68 vars: var more-vars COMMA var .

    $default  reduce using rule 68 (vars)


State 144

   66 more-expressions: COMMA . expression more-expressions

    IDENT  shift, and go to state 63
    MINUS  shift, and go to state 64

    IDENT     [reduce using rule 57 (optional-neg)]
    $default  reduce using rule 57 (optional-neg)

    expression           go to state 157
    multiplicative-expr  go to state 66
    term                 go to state 67
    optional-neg         go to state 68
    id-term              go to state 69


State 145

   64 expressions: expression more-expressions .

    $default  reduce using rule 64 (expressions)


State 146

   62 id-term: IDENT LPAREN expressions RPAREN .

    $default  reduce using rule 62 (id-term)


State 147

   48 more-multiplicative-exprs: PLUS multiplicative-expr more-multiplicative-exprs .

    $default  reduce using rule 48 (more-multiplicative-exprs)


State 148

   49 more-multiplicative-exprs: MINUS multiplicative-expr more-multiplicative-exprs .

    $default  reduce using rule 49 (more-multiplicative-exprs)


State 149

   52 more-terms: MULT term more-terms .

    $default  reduce using rule 52 (more-terms)


State 150

   53 more-terms: DIV term more-terms .

    $default  reduce using rule 53 (more-terms)


State 151

   54 more-terms: MOD term more-terms .

    $default  reduce using rule 54 (more-terms)


State 152

   61 num-term: LPAREN expression RPAREN .

    $default  reduce using rule 61 (num-term)


State 153

   18 statement: IF bool-expr THEN statements ELSE statements . ENDIF

    ENDIF  shift, and go to state 158


State 154

   33 more-relation-exprs: AND relation-expr more-relation-exprs relation-expr .

    $default  reduce using rule 33 (more-relation-exprs)


State 155

   20 statement: DO BEGINLOOP statements ENDLOOP WHILE bool-expr .

    $default  reduce using rule 20 (statement)


State 156

   21 statement: FOR var ASSIGN NUMBER SEMICOLON bool-expr . SEMICOLON var ASSIGN expression BEGINLOOP statements ENDLOOP

    SEMICOLON  shift, and go to state 159


State 157

   66 more-expressions: COMMA expression . more-expressions

    COMMA  shift, and go to state 144

    $default  reduce using rule 65 (more-expressions)

    more-expressions  go to state 160


State 158

   18 statement: IF bool-expr THEN statements ELSE statements ENDIF .

    $default  reduce using rule 18 (statement)


State 159

   21 statement: FOR var ASSIGN NUMBER SEMICOLON bool-expr SEMICOLON . var ASSIGN expression BEGINLOOP statements ENDLOOP

    IDENT  shift, and go to state 38

    var  go to state 161


State 160

   66 more-expressions: COMMA expression more-expressions .

    $default  reduce using rule 66 (more-expressions)


State 161

   21 statement: FOR var ASSIGN NUMBER SEMICOLON bool-expr SEMICOLON var . ASSIGN expression BEGINLOOP statements ENDLOOP

    ASSIGN  shift, and go to state 162


State 162

   21 statement: FOR var ASSIGN NUMBER SEMICOLON bool-expr SEMICOLON var ASSIGN . expression BEGINLOOP statements ENDLOOP

    IDENT  shift, and go to state 63
    MINUS  shift, and go to state 64

    IDENT     [reduce using rule 57 (optional-neg)]
    $default  reduce using rule 57 (optional-neg)

    expression           go to state 163
    multiplicative-expr  go to state 66
    term                 go to state 67
    optional-neg         go to state 68
    id-term              go to state 69


State 163

   21 statement: FOR var ASSIGN NUMBER SEMICOLON bool-expr SEMICOLON var ASSIGN expression . BEGINLOOP statements ENDLOOP

    BEGINLOOP  shift, and go to state 164


State 164

   21 statement: FOR var ASSIGN NUMBER SEMICOLON bool-expr SEMICOLON var ASSIGN expression BEGINLOOP . statements ENDLOOP

    IDENT     shift, and go to state 38
    IF        shift, and go to state 39
    WHILE     shift, and go to state 40
    DO        shift, and go to state 41
    FOR       shift, and go to state 42
    READ      shift, and go to state 43
    WRITE     shift, and go to state 44
    CONTINUE  shift, and go to state 45
    RETURN    shift, and go to state 46

    statements  go to state 165
    statement   go to state 48
    var         go to state 49


State 165

   21 statement: FOR var ASSIGN NUMBER SEMICOLON bool-expr SEMICOLON var ASSIGN expression BEGINLOOP statements . ENDLOOP

    ENDLOOP  shift, and go to state 166


State 166

   21 statement: FOR var ASSIGN NUMBER SEMICOLON bool-expr SEMICOLON var ASSIGN expression BEGINLOOP statements ENDLOOP .

    $default  reduce using rule 21 (statement)
