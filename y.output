Grammar

    0 $accept: program $end

    1 program: functions

    2 functions: %empty
    3          | function functions

    4 function: FUNCTION IDENT SEMICOLON BEGINPARAMS declarations ENDPARAMS BEGINLOCALS declarations ENDLOCALS BEGINBODY statements ENDBODY

    5 declarations: %empty
    6             | declaration SEMICOLON declarations

    7 declaration: ids COLON INT
    8            | ids COLON ARRAY arr OF INT
    9            | ids COLON ARRAY arr arr OF INT
   10            | ids error INT

   11 arr: LBRACKET NUMBER RBRACKET

   12 ids: IDENT
   13    | IDENT COMMA ids

   14 statements: statement SEMICOLON
   15           | statement SEMICOLON statements

   16 statement: var ASSIGN expression
   17          | IF bool_expr THEN statements ENDIF
   18          | IF bool_expr THEN statements ELSE statements ENDIF
   19          | WHILE bool_expr BEGINLOOP statements ENDLOOP
   20          | DO BEGINLOOP statements ENDLOOP WHILE bool_expr
   21          | FOR var ASSIGN NUMBER SEMICOLON bool_expr SEMICOLON var ASSIGN expression BEGINLOOP statements ENDLOOP
   22          | READ vars
   23          | WRITE vars
   24          | CONTINUE
   25          | RETURN expression

   26 bool_expr: relation_and_expr
   27          | relation_and_expr OR bool_expr

   28 relation_and_expr: relation_expr
   29                  | relation_expr AND relation_and_expr

   30 relation_expr: expression comp expression
   31              | NOT expression comp expression
   32              | TRUE
   33              | NOT TRUE
   34              | FALSE
   35              | NOT FALSE
   36              | LPAREN bool_expr RPAREN
   37              | NOT LPAREN bool_expr RPAREN

   38 comp: EQ
   39     | NEQ
   40     | LT
   41     | GT
   42     | LE
   43     | GE

   44 expression: multiplicative_expr
   45           | multiplicative_expr PLUS expression
   46           | multiplicative_expr MINUS expression

   47 multiplicative_expr: term
   48                    | term MULT multiplicative_expr
   49                    | term DIV multiplicative_expr
   50                    | term MOD multiplicative_expr

   51 term: num_term
   52     | id_term

   53 num_term: var
   54         | MINUS var
   55         | NUMBER
   56         | MINUS NUMBER
   57         | LPAREN expression RPAREN
   58         | MINUS LPAREN expression RPAREN

   59 id_term: IDENT LPAREN expressions RPAREN

   60 expressions: %empty
   61            | nonempty_expressions

   62 nonempty_expressions: expression
   63                     | expression COMMA nonempty_expressions

   64 vars: var
   65     | var COMMA vars

   66 var: IDENT
   67    | IDENT brack_expr
   68    | IDENT brack_expr brack_expr

   69 brack_expr: LBRACKET expression RBRACKET


Terminals, with rules where they appear

$end (0) 0
error (256) 10
FUNCTION (258) 4
BEGINPARAMS (259) 4
ENDPARAMS (260) 4
BEGINLOCALS (261) 4
ENDLOCALS (262) 4
BEGINBODY (263) 4
ENDBODY (264) 4
INT (265) 7 8 9 10
ARRAY (266) 8 9
OF (267) 8 9
IF (268) 17 18
THEN (269) 17 18
ENDIF (270) 17 18
ELSE (271) 18
WHILE (272) 19 20
DO (273) 20
FOR (274) 21
BEGINLOOP (275) 19 20 21
ENDLOOP (276) 19 20 21
CONTINUE (277) 24
READ (278) 22
WRITE (279) 23
AND (280) 29
OR (281) 27
NOT (282) 31 33 35 37
TRUE (283) 32 33
FALSE (284) 34 35
RETURN (285) 25
MINUS (286) 46 54 56 58
PLUS (287) 45
MULT (288) 48
DIV (289) 49
MOD (290) 50
EQ (291) 38
NEQ (292) 39
LE (293) 42
GE (294) 43
LT (295) 40
GT (296) 41
SEMICOLON (297) 4 6 14 15 21
COMMA (298) 13 63 65
LPAREN (299) 36 37 57 58 59
RPAREN (300) 36 37 57 58 59
LBRACKET (301) 11 69
RBRACKET (302) 11 69
ASSIGN (303) 16 21
COLON (304) 7 8 9
NUMBER (305) 11 21 55 56
IDENT (306) 4 12 13 59 66 67 68


Nonterminals, with rules where they appear

$accept (52)
    on left: 0
program (53)
    on left: 1, on right: 0
functions (54)
    on left: 2 3, on right: 1 3
function (55)
    on left: 4, on right: 3
declarations (56)
    on left: 5 6, on right: 4 6
declaration (57)
    on left: 7 8 9 10, on right: 6
arr (58)
    on left: 11, on right: 8 9
ids (59)
    on left: 12 13, on right: 7 8 9 10 13
statements (60)
    on left: 14 15, on right: 4 15 17 18 19 20 21
statement (61)
    on left: 16 17 18 19 20 21 22 23 24 25, on right: 14 15
bool_expr (62)
    on left: 26 27, on right: 17 18 19 20 21 27 36 37
relation_and_expr (63)
    on left: 28 29, on right: 26 27 29
relation_expr (64)
    on left: 30 31 32 33 34 35 36 37, on right: 28 29
comp (65)
    on left: 38 39 40 41 42 43, on right: 30 31
expression (66)
    on left: 44 45 46, on right: 16 21 25 30 31 45 46 57 58 62 63 69
multiplicative_expr (67)
    on left: 47 48 49 50, on right: 44 45 46 48 49 50
term (68)
    on left: 51 52, on right: 47 48 49 50
num_term (69)
    on left: 53 54 55 56 57 58, on right: 51
id_term (70)
    on left: 59, on right: 52
expressions (71)
    on left: 60 61, on right: 59
nonempty_expressions (72)
    on left: 62 63, on right: 61 63
vars (73)
    on left: 64 65, on right: 22 23 65
var (74)
    on left: 66 67 68, on right: 16 21 53 54 64 65
brack_expr (75)
    on left: 69, on right: 67 68


State 0

    0 $accept: . program $end

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 2 (functions)

    program    go to state 2
    functions  go to state 3
    function   go to state 4


State 1

    4 function: FUNCTION . IDENT SEMICOLON BEGINPARAMS declarations ENDPARAMS BEGINLOCALS declarations ENDLOCALS BEGINBODY statements ENDBODY

    IDENT  shift, and go to state 5


State 2

    0 $accept: program . $end

    $end  shift, and go to state 6


State 3

    1 program: functions .

    $default  reduce using rule 1 (program)


State 4

    3 functions: function . functions

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 2 (functions)

    functions  go to state 7
    function   go to state 4


State 5

    4 function: FUNCTION IDENT . SEMICOLON BEGINPARAMS declarations ENDPARAMS BEGINLOCALS declarations ENDLOCALS BEGINBODY statements ENDBODY

    SEMICOLON  shift, and go to state 8


State 6

    0 $accept: program $end .

    $default  accept


State 7

    3 functions: function functions .

    $default  reduce using rule 3 (functions)


State 8

    4 function: FUNCTION IDENT SEMICOLON . BEGINPARAMS declarations ENDPARAMS BEGINLOCALS declarations ENDLOCALS BEGINBODY statements ENDBODY

    BEGINPARAMS  shift, and go to state 9


State 9

    4 function: FUNCTION IDENT SEMICOLON BEGINPARAMS . declarations ENDPARAMS BEGINLOCALS declarations ENDLOCALS BEGINBODY statements ENDBODY

    IDENT  shift, and go to state 10

    $default  reduce using rule 5 (declarations)

    declarations  go to state 11
    declaration   go to state 12
    ids           go to state 13


State 10

   12 ids: IDENT .
   13    | IDENT . COMMA ids

    COMMA  shift, and go to state 14

    $default  reduce using rule 12 (ids)


State 11

    4 function: FUNCTION IDENT SEMICOLON BEGINPARAMS declarations . ENDPARAMS BEGINLOCALS declarations ENDLOCALS BEGINBODY statements ENDBODY

    ENDPARAMS  shift, and go to state 15


State 12

    6 declarations: declaration . SEMICOLON declarations

    SEMICOLON  shift, and go to state 16


State 13

    7 declaration: ids . COLON INT
    8            | ids . COLON ARRAY arr OF INT
    9            | ids . COLON ARRAY arr arr OF INT
   10            | ids . error INT

    error  shift, and go to state 17
    COLON  shift, and go to state 18


State 14

   13 ids: IDENT COMMA . ids

    IDENT  shift, and go to state 10

    ids  go to state 19


State 15

    4 function: FUNCTION IDENT SEMICOLON BEGINPARAMS declarations ENDPARAMS . BEGINLOCALS declarations ENDLOCALS BEGINBODY statements ENDBODY

    BEGINLOCALS  shift, and go to state 20


State 16

    6 declarations: declaration SEMICOLON . declarations

    IDENT  shift, and go to state 10

    $default  reduce using rule 5 (declarations)

    declarations  go to state 21
    declaration   go to state 12
    ids           go to state 13


State 17

   10 declaration: ids error . INT

    INT  shift, and go to state 22


State 18

    7 declaration: ids COLON . INT
    8            | ids COLON . ARRAY arr OF INT
    9            | ids COLON . ARRAY arr arr OF INT

    INT    shift, and go to state 23
    ARRAY  shift, and go to state 24


State 19

   13 ids: IDENT COMMA ids .

    $default  reduce using rule 13 (ids)


State 20

    4 function: FUNCTION IDENT SEMICOLON BEGINPARAMS declarations ENDPARAMS BEGINLOCALS . declarations ENDLOCALS BEGINBODY statements ENDBODY

    IDENT  shift, and go to state 10

    $default  reduce using rule 5 (declarations)

    declarations  go to state 25
    declaration   go to state 12
    ids           go to state 13


State 21

    6 declarations: declaration SEMICOLON declarations .

    $default  reduce using rule 6 (declarations)


State 22

   10 declaration: ids error INT .

    $default  reduce using rule 10 (declaration)


State 23

    7 declaration: ids COLON INT .

    $default  reduce using rule 7 (declaration)


State 24

    8 declaration: ids COLON ARRAY . arr OF INT
    9            | ids COLON ARRAY . arr arr OF INT

    LBRACKET  shift, and go to state 26

    arr  go to state 27


State 25

    4 function: FUNCTION IDENT SEMICOLON BEGINPARAMS declarations ENDPARAMS BEGINLOCALS declarations . ENDLOCALS BEGINBODY statements ENDBODY

    ENDLOCALS  shift, and go to state 28


State 26

   11 arr: LBRACKET . NUMBER RBRACKET

    NUMBER  shift, and go to state 29


State 27

    8 declaration: ids COLON ARRAY arr . OF INT
    9            | ids COLON ARRAY arr . arr OF INT

    OF        shift, and go to state 30
    LBRACKET  shift, and go to state 26

    arr  go to state 31


State 28

    4 function: FUNCTION IDENT SEMICOLON BEGINPARAMS declarations ENDPARAMS BEGINLOCALS declarations ENDLOCALS . BEGINBODY statements ENDBODY

    BEGINBODY  shift, and go to state 32


State 29

   11 arr: LBRACKET NUMBER . RBRACKET

    RBRACKET  shift, and go to state 33


State 30

    8 declaration: ids COLON ARRAY arr OF . INT

    INT  shift, and go to state 34


State 31

    9 declaration: ids COLON ARRAY arr arr . OF INT

    OF  shift, and go to state 35


State 32

    4 function: FUNCTION IDENT SEMICOLON BEGINPARAMS declarations ENDPARAMS BEGINLOCALS declarations ENDLOCALS BEGINBODY . statements ENDBODY

    IF        shift, and go to state 36
    WHILE     shift, and go to state 37
    DO        shift, and go to state 38
    FOR       shift, and go to state 39
    CONTINUE  shift, and go to state 40
    READ      shift, and go to state 41
    WRITE     shift, and go to state 42
    RETURN    shift, and go to state 43
    IDENT     shift, and go to state 44

    statements  go to state 45
    statement   go to state 46
    var         go to state 47


State 33

   11 arr: LBRACKET NUMBER RBRACKET .

    $default  reduce using rule 11 (arr)


State 34

    8 declaration: ids COLON ARRAY arr OF INT .

    $default  reduce using rule 8 (declaration)


State 35

    9 declaration: ids COLON ARRAY arr arr OF . INT

    INT  shift, and go to state 48


State 36

   17 statement: IF . bool_expr THEN statements ENDIF
   18          | IF . bool_expr THEN statements ELSE statements ENDIF

    NOT     shift, and go to state 49
    TRUE    shift, and go to state 50
    FALSE   shift, and go to state 51
    MINUS   shift, and go to state 52
    LPAREN  shift, and go to state 53
    NUMBER  shift, and go to state 54
    IDENT   shift, and go to state 55

    bool_expr            go to state 56
    relation_and_expr    go to state 57
    relation_expr        go to state 58
    expression           go to state 59
    multiplicative_expr  go to state 60
    term                 go to state 61
    num_term             go to state 62
    id_term              go to state 63
    var                  go to state 64


State 37

   19 statement: WHILE . bool_expr BEGINLOOP statements ENDLOOP

    NOT     shift, and go to state 49
    TRUE    shift, and go to state 50
    FALSE   shift, and go to state 51
    MINUS   shift, and go to state 52
    LPAREN  shift, and go to state 53
    NUMBER  shift, and go to state 54
    IDENT   shift, and go to state 55

    bool_expr            go to state 65
    relation_and_expr    go to state 57
    relation_expr        go to state 58
    expression           go to state 59
    multiplicative_expr  go to state 60
    term                 go to state 61
    num_term             go to state 62
    id_term              go to state 63
    var                  go to state 64


State 38

   20 statement: DO . BEGINLOOP statements ENDLOOP WHILE bool_expr

    BEGINLOOP  shift, and go to state 66


State 39

   21 statement: FOR . var ASSIGN NUMBER SEMICOLON bool_expr SEMICOLON var ASSIGN expression BEGINLOOP statements ENDLOOP

    IDENT  shift, and go to state 44

    var  go to state 67


State 40

   24 statement: CONTINUE .

    $default  reduce using rule 24 (statement)


State 41

   22 statement: READ . vars

    IDENT  shift, and go to state 44

    vars  go to state 68
    var   go to state 69


State 42

   23 statement: WRITE . vars

    IDENT  shift, and go to state 44

    vars  go to state 70
    var   go to state 69


State 43

   25 statement: RETURN . expression

    MINUS   shift, and go to state 52
    LPAREN  shift, and go to state 71
    NUMBER  shift, and go to state 54
    IDENT   shift, and go to state 55

    expression           go to state 72
    multiplicative_expr  go to state 60
    term                 go to state 61
    num_term             go to state 62
    id_term              go to state 63
    var                  go to state 64


State 44

   66 var: IDENT .
   67    | IDENT . brack_expr
   68    | IDENT . brack_expr brack_expr

    LBRACKET  shift, and go to state 73

    $default  reduce using rule 66 (var)

    brack_expr  go to state 74


State 45

    4 function: FUNCTION IDENT SEMICOLON BEGINPARAMS declarations ENDPARAMS BEGINLOCALS declarations ENDLOCALS BEGINBODY statements . ENDBODY

    ENDBODY  shift, and go to state 75


State 46

   14 statements: statement . SEMICOLON
   15           | statement . SEMICOLON statements

    SEMICOLON  shift, and go to state 76


State 47

   16 statement: var . ASSIGN expression

    ASSIGN  shift, and go to state 77


State 48

    9 declaration: ids COLON ARRAY arr arr OF INT .

    $default  reduce using rule 9 (declaration)


State 49

   31 relation_expr: NOT . expression comp expression
   33              | NOT . TRUE
   35              | NOT . FALSE
   37              | NOT . LPAREN bool_expr RPAREN

    TRUE    shift, and go to state 78
    FALSE   shift, and go to state 79
    MINUS   shift, and go to state 52
    LPAREN  shift, and go to state 80
    NUMBER  shift, and go to state 54
    IDENT   shift, and go to state 55

    expression           go to state 81
    multiplicative_expr  go to state 60
    term                 go to state 61
    num_term             go to state 62
    id_term              go to state 63
    var                  go to state 64


State 50

   32 relation_expr: TRUE .

    $default  reduce using rule 32 (relation_expr)


State 51

   34 relation_expr: FALSE .

    $default  reduce using rule 34 (relation_expr)


State 52

   54 num_term: MINUS . var
   56         | MINUS . NUMBER
   58         | MINUS . LPAREN expression RPAREN

    LPAREN  shift, and go to state 82
    NUMBER  shift, and go to state 83
    IDENT   shift, and go to state 44

    var  go to state 84


State 53

   36 relation_expr: LPAREN . bool_expr RPAREN
   57 num_term: LPAREN . expression RPAREN

    NOT     shift, and go to state 49
    TRUE    shift, and go to state 50
    FALSE   shift, and go to state 51
    MINUS   shift, and go to state 52
    LPAREN  shift, and go to state 53
    NUMBER  shift, and go to state 54
    IDENT   shift, and go to state 55

    bool_expr            go to state 85
    relation_and_expr    go to state 57
    relation_expr        go to state 58
    expression           go to state 86
    multiplicative_expr  go to state 60
    term                 go to state 61
    num_term             go to state 62
    id_term              go to state 63
    var                  go to state 64


State 54

   55 num_term: NUMBER .

    $default  reduce using rule 55 (num_term)


State 55

   59 id_term: IDENT . LPAREN expressions RPAREN
   66 var: IDENT .
   67    | IDENT . brack_expr
   68    | IDENT . brack_expr brack_expr

    LPAREN    shift, and go to state 87
    LBRACKET  shift, and go to state 73

    $default  reduce using rule 66 (var)

    brack_expr  go to state 74


State 56

   17 statement: IF bool_expr . THEN statements ENDIF
   18          | IF bool_expr . THEN statements ELSE statements ENDIF

    THEN  shift, and go to state 88


State 57

   26 bool_expr: relation_and_expr .
   27          | relation_and_expr . OR bool_expr

    OR  shift, and go to state 89

    $default  reduce using rule 26 (bool_expr)


State 58

   28 relation_and_expr: relation_expr .
   29                  | relation_expr . AND relation_and_expr

    AND  shift, and go to state 90

    $default  reduce using rule 28 (relation_and_expr)


State 59

   30 relation_expr: expression . comp expression

    EQ   shift, and go to state 91
    NEQ  shift, and go to state 92
    LE   shift, and go to state 93
    GE   shift, and go to state 94
    LT   shift, and go to state 95
    GT   shift, and go to state 96

    comp  go to state 97


State 60

   44 expression: multiplicative_expr .
   45           | multiplicative_expr . PLUS expression
   46           | multiplicative_expr . MINUS expression

    MINUS  shift, and go to state 98
    PLUS   shift, and go to state 99

    $default  reduce using rule 44 (expression)


State 61

   47 multiplicative_expr: term .
   48                    | term . MULT multiplicative_expr
   49                    | term . DIV multiplicative_expr
   50                    | term . MOD multiplicative_expr

    MULT  shift, and go to state 100
    DIV   shift, and go to state 101
    MOD   shift, and go to state 102

    $default  reduce using rule 47 (multiplicative_expr)


State 62

   51 term: num_term .

    $default  reduce using rule 51 (term)


State 63

   52 term: id_term .

    $default  reduce using rule 52 (term)


State 64

   53 num_term: var .

    $default  reduce using rule 53 (num_term)


State 65

   19 statement: WHILE bool_expr . BEGINLOOP statements ENDLOOP

    BEGINLOOP  shift, and go to state 103


State 66

   20 statement: DO BEGINLOOP . statements ENDLOOP WHILE bool_expr

    IF        shift, and go to state 36
    WHILE     shift, and go to state 37
    DO        shift, and go to state 38
    FOR       shift, and go to state 39
    CONTINUE  shift, and go to state 40
    READ      shift, and go to state 41
    WRITE     shift, and go to state 42
    RETURN    shift, and go to state 43
    IDENT     shift, and go to state 44

    statements  go to state 104
    statement   go to state 46
    var         go to state 47


State 67

   21 statement: FOR var . ASSIGN NUMBER SEMICOLON bool_expr SEMICOLON var ASSIGN expression BEGINLOOP statements ENDLOOP

    ASSIGN  shift, and go to state 105


State 68

   22 statement: READ vars .

    $default  reduce using rule 22 (statement)


State 69

   64 vars: var .
   65     | var . COMMA vars

    COMMA  shift, and go to state 106

    $default  reduce using rule 64 (vars)


State 70

   23 statement: WRITE vars .

    $default  reduce using rule 23 (statement)


State 71

   57 num_term: LPAREN . expression RPAREN

    MINUS   shift, and go to state 52
    LPAREN  shift, and go to state 71
    NUMBER  shift, and go to state 54
    IDENT   shift, and go to state 55

    expression           go to state 107
    multiplicative_expr  go to state 60
    term                 go to state 61
    num_term             go to state 62
    id_term              go to state 63
    var                  go to state 64


State 72

   25 statement: RETURN expression .

    $default  reduce using rule 25 (statement)


State 73

   69 brack_expr: LBRACKET . expression RBRACKET

    MINUS   shift, and go to state 52
    LPAREN  shift, and go to state 71
    NUMBER  shift, and go to state 54
    IDENT   shift, and go to state 55

    expression           go to state 108
    multiplicative_expr  go to state 60
    term                 go to state 61
    num_term             go to state 62
    id_term              go to state 63
    var                  go to state 64


State 74

   67 var: IDENT brack_expr .
   68    | IDENT brack_expr . brack_expr

    LBRACKET  shift, and go to state 73

    $default  reduce using rule 67 (var)

    brack_expr  go to state 109


State 75

    4 function: FUNCTION IDENT SEMICOLON BEGINPARAMS declarations ENDPARAMS BEGINLOCALS declarations ENDLOCALS BEGINBODY statements ENDBODY .

    $default  reduce using rule 4 (function)


State 76

   14 statements: statement SEMICOLON .
   15           | statement SEMICOLON . statements

    IF        shift, and go to state 36
    WHILE     shift, and go to state 37
    DO        shift, and go to state 38
    FOR       shift, and go to state 39
    CONTINUE  shift, and go to state 40
    READ      shift, and go to state 41
    WRITE     shift, and go to state 42
    RETURN    shift, and go to state 43
    IDENT     shift, and go to state 44

    $default  reduce using rule 14 (statements)

    statements  go to state 110
    statement   go to state 46
    var         go to state 47


State 77

   16 statement: var ASSIGN . expression

    MINUS   shift, and go to state 52
    LPAREN  shift, and go to state 71
    NUMBER  shift, and go to state 54
    IDENT   shift, and go to state 55

    expression           go to state 111
    multiplicative_expr  go to state 60
    term                 go to state 61
    num_term             go to state 62
    id_term              go to state 63
    var                  go to state 64


State 78

   33 relation_expr: NOT TRUE .

    $default  reduce using rule 33 (relation_expr)


State 79

   35 relation_expr: NOT FALSE .

    $default  reduce using rule 35 (relation_expr)


State 80

   37 relation_expr: NOT LPAREN . bool_expr RPAREN
   57 num_term: LPAREN . expression RPAREN

    NOT     shift, and go to state 49
    TRUE    shift, and go to state 50
    FALSE   shift, and go to state 51
    MINUS   shift, and go to state 52
    LPAREN  shift, and go to state 53
    NUMBER  shift, and go to state 54
    IDENT   shift, and go to state 55

    bool_expr            go to state 112
    relation_and_expr    go to state 57
    relation_expr        go to state 58
    expression           go to state 86
    multiplicative_expr  go to state 60
    term                 go to state 61
    num_term             go to state 62
    id_term              go to state 63
    var                  go to state 64


State 81

   31 relation_expr: NOT expression . comp expression

    EQ   shift, and go to state 91
    NEQ  shift, and go to state 92
    LE   shift, and go to state 93
    GE   shift, and go to state 94
    LT   shift, and go to state 95
    GT   shift, and go to state 96

    comp  go to state 113


State 82

   58 num_term: MINUS LPAREN . expression RPAREN

    MINUS   shift, and go to state 52
    LPAREN  shift, and go to state 71
    NUMBER  shift, and go to state 54
    IDENT   shift, and go to state 55

    expression           go to state 114
    multiplicative_expr  go to state 60
    term                 go to state 61
    num_term             go to state 62
    id_term              go to state 63
    var                  go to state 64


State 83

   56 num_term: MINUS NUMBER .

    $default  reduce using rule 56 (num_term)


State 84

   54 num_term: MINUS var .

    $default  reduce using rule 54 (num_term)


State 85

   36 relation_expr: LPAREN bool_expr . RPAREN

    RPAREN  shift, and go to state 115


State 86

   30 relation_expr: expression . comp expression
   57 num_term: LPAREN expression . RPAREN

    EQ      shift, and go to state 91
    NEQ     shift, and go to state 92
    LE      shift, and go to state 93
    GE      shift, and go to state 94
    LT      shift, and go to state 95
    GT      shift, and go to state 96
    RPAREN  shift, and go to state 116

    comp  go to state 97


State 87

   59 id_term: IDENT LPAREN . expressions RPAREN

    MINUS   shift, and go to state 52
    LPAREN  shift, and go to state 71
    NUMBER  shift, and go to state 54
    IDENT   shift, and go to state 55

    $default  reduce using rule 60 (expressions)

    expression            go to state 117
    multiplicative_expr   go to state 60
    term                  go to state 61
    num_term              go to state 62
    id_term               go to state 63
    expressions           go to state 118
    nonempty_expressions  go to state 119
    var                   go to state 64


State 88

   17 statement: IF bool_expr THEN . statements ENDIF
   18          | IF bool_expr THEN . statements ELSE statements ENDIF

    IF        shift, and go to state 36
    WHILE     shift, and go to state 37
    DO        shift, and go to state 38
    FOR       shift, and go to state 39
    CONTINUE  shift, and go to state 40
    READ      shift, and go to state 41
    WRITE     shift, and go to state 42
    RETURN    shift, and go to state 43
    IDENT     shift, and go to state 44

    statements  go to state 120
    statement   go to state 46
    var         go to state 47


State 89

   27 bool_expr: relation_and_expr OR . bool_expr

    NOT     shift, and go to state 49
    TRUE    shift, and go to state 50
    FALSE   shift, and go to state 51
    MINUS   shift, and go to state 52
    LPAREN  shift, and go to state 53
    NUMBER  shift, and go to state 54
    IDENT   shift, and go to state 55

    bool_expr            go to state 121
    relation_and_expr    go to state 57
    relation_expr        go to state 58
    expression           go to state 59
    multiplicative_expr  go to state 60
    term                 go to state 61
    num_term             go to state 62
    id_term              go to state 63
    var                  go to state 64


State 90

   29 relation_and_expr: relation_expr AND . relation_and_expr

    NOT     shift, and go to state 49
    TRUE    shift, and go to state 50
    FALSE   shift, and go to state 51
    MINUS   shift, and go to state 52
    LPAREN  shift, and go to state 53
    NUMBER  shift, and go to state 54
    IDENT   shift, and go to state 55

    relation_and_expr    go to state 122
    relation_expr        go to state 58
    expression           go to state 59
    multiplicative_expr  go to state 60
    term                 go to state 61
    num_term             go to state 62
    id_term              go to state 63
    var                  go to state 64


State 91

   38 comp: EQ .

    $default  reduce using rule 38 (comp)


State 92

   39 comp: NEQ .

    $default  reduce using rule 39 (comp)


State 93

   42 comp: LE .

    $default  reduce using rule 42 (comp)


State 94

   43 comp: GE .

    $default  reduce using rule 43 (comp)


State 95

   40 comp: LT .

    $default  reduce using rule 40 (comp)


State 96

   41 comp: GT .

    $default  reduce using rule 41 (comp)


State 97

   30 relation_expr: expression comp . expression

    MINUS   shift, and go to state 52
    LPAREN  shift, and go to state 71
    NUMBER  shift, and go to state 54
    IDENT   shift, and go to state 55

    expression           go to state 123
    multiplicative_expr  go to state 60
    term                 go to state 61
    num_term             go to state 62
    id_term              go to state 63
    var                  go to state 64


State 98

   46 expression: multiplicative_expr MINUS . expression

    MINUS   shift, and go to state 52
    LPAREN  shift, and go to state 71
    NUMBER  shift, and go to state 54
    IDENT   shift, and go to state 55

    expression           go to state 124
    multiplicative_expr  go to state 60
    term                 go to state 61
    num_term             go to state 62
    id_term              go to state 63
    var                  go to state 64


State 99

   45 expression: multiplicative_expr PLUS . expression

    MINUS   shift, and go to state 52
    LPAREN  shift, and go to state 71
    NUMBER  shift, and go to state 54
    IDENT   shift, and go to state 55

    expression           go to state 125
    multiplicative_expr  go to state 60
    term                 go to state 61
    num_term             go to state 62
    id_term              go to state 63
    var                  go to state 64


State 100

   48 multiplicative_expr: term MULT . multiplicative_expr

    MINUS   shift, and go to state 52
    LPAREN  shift, and go to state 71
    NUMBER  shift, and go to state 54
    IDENT   shift, and go to state 55

    multiplicative_expr  go to state 126
    term                 go to state 61
    num_term             go to state 62
    id_term              go to state 63
    var                  go to state 64


State 101

   49 multiplicative_expr: term DIV . multiplicative_expr

    MINUS   shift, and go to state 52
    LPAREN  shift, and go to state 71
    NUMBER  shift, and go to state 54
    IDENT   shift, and go to state 55

    multiplicative_expr  go to state 127
    term                 go to state 61
    num_term             go to state 62
    id_term              go to state 63
    var                  go to state 64


State 102

   50 multiplicative_expr: term MOD . multiplicative_expr

    MINUS   shift, and go to state 52
    LPAREN  shift, and go to state 71
    NUMBER  shift, and go to state 54
    IDENT   shift, and go to state 55

    multiplicative_expr  go to state 128
    term                 go to state 61
    num_term             go to state 62
    id_term              go to state 63
    var                  go to state 64


State 103

   19 statement: WHILE bool_expr BEGINLOOP . statements ENDLOOP

    IF        shift, and go to state 36
    WHILE     shift, and go to state 37
    DO        shift, and go to state 38
    FOR       shift, and go to state 39
    CONTINUE  shift, and go to state 40
    READ      shift, and go to state 41
    WRITE     shift, and go to state 42
    RETURN    shift, and go to state 43
    IDENT     shift, and go to state 44

    statements  go to state 129
    statement   go to state 46
    var         go to state 47


State 104

   20 statement: DO BEGINLOOP statements . ENDLOOP WHILE bool_expr

    ENDLOOP  shift, and go to state 130


State 105

   21 statement: FOR var ASSIGN . NUMBER SEMICOLON bool_expr SEMICOLON var ASSIGN expression BEGINLOOP statements ENDLOOP

    NUMBER  shift, and go to state 131


State 106

   65 vars: var COMMA . vars

    IDENT  shift, and go to state 44

    vars  go to state 132
    var   go to state 69


State 107

   57 num_term: LPAREN expression . RPAREN

    RPAREN  shift, and go to state 116


State 108

   69 brack_expr: LBRACKET expression . RBRACKET

    RBRACKET  shift, and go to state 133


State 109

   68 var: IDENT brack_expr brack_expr .

    $default  reduce using rule 68 (var)


State 110

   15 statements: statement SEMICOLON statements .

    $default  reduce using rule 15 (statements)


State 111

   16 statement: var ASSIGN expression .

    $default  reduce using rule 16 (statement)


State 112

   37 relation_expr: NOT LPAREN bool_expr . RPAREN

    RPAREN  shift, and go to state 134


State 113

   31 relation_expr: NOT expression comp . expression

    MINUS   shift, and go to state 52
    LPAREN  shift, and go to state 71
    NUMBER  shift, and go to state 54
    IDENT   shift, and go to state 55

    expression           go to state 135
    multiplicative_expr  go to state 60
    term                 go to state 61
    num_term             go to state 62
    id_term              go to state 63
    var                  go to state 64


State 114

   58 num_term: MINUS LPAREN expression . RPAREN

    RPAREN  shift, and go to state 136


State 115

   36 relation_expr: LPAREN bool_expr RPAREN .

    $default  reduce using rule 36 (relation_expr)


State 116

   57 num_term: LPAREN expression RPAREN .

    $default  reduce using rule 57 (num_term)


State 117

   62 nonempty_expressions: expression .
   63                     | expression . COMMA nonempty_expressions

    COMMA  shift, and go to state 137

    $default  reduce using rule 62 (nonempty_expressions)


State 118

   59 id_term: IDENT LPAREN expressions . RPAREN

    RPAREN  shift, and go to state 138


State 119

   61 expressions: nonempty_expressions .

    $default  reduce using rule 61 (expressions)


State 120

   17 statement: IF bool_expr THEN statements . ENDIF
   18          | IF bool_expr THEN statements . ELSE statements ENDIF

    ENDIF  shift, and go to state 139
    ELSE   shift, and go to state 140


State 121

   27 bool_expr: relation_and_expr OR bool_expr .

    $default  reduce using rule 27 (bool_expr)


State 122

   29 relation_and_expr: relation_expr AND relation_and_expr .

    $default  reduce using rule 29 (relation_and_expr)


State 123

   30 relation_expr: expression comp expression .

    $default  reduce using rule 30 (relation_expr)


State 124

   46 expression: multiplicative_expr MINUS expression .

    $default  reduce using rule 46 (expression)


State 125

   45 expression: multiplicative_expr PLUS expression .

    $default  reduce using rule 45 (expression)


State 126

   48 multiplicative_expr: term MULT multiplicative_expr .

    $default  reduce using rule 48 (multiplicative_expr)


State 127

   49 multiplicative_expr: term DIV multiplicative_expr .

    $default  reduce using rule 49 (multiplicative_expr)


State 128

   50 multiplicative_expr: term MOD multiplicative_expr .

    $default  reduce using rule 50 (multiplicative_expr)


State 129

   19 statement: WHILE bool_expr BEGINLOOP statements . ENDLOOP

    ENDLOOP  shift, and go to state 141


State 130

   20 statement: DO BEGINLOOP statements ENDLOOP . WHILE bool_expr

    WHILE  shift, and go to state 142


State 131

   21 statement: FOR var ASSIGN NUMBER . SEMICOLON bool_expr SEMICOLON var ASSIGN expression BEGINLOOP statements ENDLOOP

    SEMICOLON  shift, and go to state 143


State 132

   65 vars: var COMMA vars .

    $default  reduce using rule 65 (vars)


State 133

   69 brack_expr: LBRACKET expression RBRACKET .

    $default  reduce using rule 69 (brack_expr)


State 134

   37 relation_expr: NOT LPAREN bool_expr RPAREN .

    $default  reduce using rule 37 (relation_expr)


State 135

   31 relation_expr: NOT expression comp expression .

    $default  reduce using rule 31 (relation_expr)


State 136

   58 num_term: MINUS LPAREN expression RPAREN .

    $default  reduce using rule 58 (num_term)


State 137

   63 nonempty_expressions: expression COMMA . nonempty_expressions

    MINUS   shift, and go to state 52
    LPAREN  shift, and go to state 71
    NUMBER  shift, and go to state 54
    IDENT   shift, and go to state 55

    expression            go to state 117
    multiplicative_expr   go to state 60
    term                  go to state 61
    num_term              go to state 62
    id_term               go to state 63
    nonempty_expressions  go to state 144
    var                   go to state 64


State 138

   59 id_term: IDENT LPAREN expressions RPAREN .

    $default  reduce using rule 59 (id_term)


State 139

   17 statement: IF bool_expr THEN statements ENDIF .

    $default  reduce using rule 17 (statement)


State 140

   18 statement: IF bool_expr THEN statements ELSE . statements ENDIF

    IF        shift, and go to state 36
    WHILE     shift, and go to state 37
    DO        shift, and go to state 38
    FOR       shift, and go to state 39
    CONTINUE  shift, and go to state 40
    READ      shift, and go to state 41
    WRITE     shift, and go to state 42
    RETURN    shift, and go to state 43
    IDENT     shift, and go to state 44

    statements  go to state 145
    statement   go to state 46
    var         go to state 47


State 141

   19 statement: WHILE bool_expr BEGINLOOP statements ENDLOOP .

    $default  reduce using rule 19 (statement)


State 142

   20 statement: DO BEGINLOOP statements ENDLOOP WHILE . bool_expr

    NOT     shift, and go to state 49
    TRUE    shift, and go to state 50
    FALSE   shift, and go to state 51
    MINUS   shift, and go to state 52
    LPAREN  shift, and go to state 53
    NUMBER  shift, and go to state 54
    IDENT   shift, and go to state 55

    bool_expr            go to state 146
    relation_and_expr    go to state 57
    relation_expr        go to state 58
    expression           go to state 59
    multiplicative_expr  go to state 60
    term                 go to state 61
    num_term             go to state 62
    id_term              go to state 63
    var                  go to state 64


State 143

   21 statement: FOR var ASSIGN NUMBER SEMICOLON . bool_expr SEMICOLON var ASSIGN expression BEGINLOOP statements ENDLOOP

    NOT     shift, and go to state 49
    TRUE    shift, and go to state 50
    FALSE   shift, and go to state 51
    MINUS   shift, and go to state 52
    LPAREN  shift, and go to state 53
    NUMBER  shift, and go to state 54
    IDENT   shift, and go to state 55

    bool_expr            go to state 147
    relation_and_expr    go to state 57
    relation_expr        go to state 58
    expression           go to state 59
    multiplicative_expr  go to state 60
    term                 go to state 61
    num_term             go to state 62
    id_term              go to state 63
    var                  go to state 64


State 144

   63 nonempty_expressions: expression COMMA nonempty_expressions .

    $default  reduce using rule 63 (nonempty_expressions)


State 145

   18 statement: IF bool_expr THEN statements ELSE statements . ENDIF

    ENDIF  shift, and go to state 148


State 146

   20 statement: DO BEGINLOOP statements ENDLOOP WHILE bool_expr .

    $default  reduce using rule 20 (statement)


State 147

   21 statement: FOR var ASSIGN NUMBER SEMICOLON bool_expr . SEMICOLON var ASSIGN expression BEGINLOOP statements ENDLOOP

    SEMICOLON  shift, and go to state 149


State 148

   18 statement: IF bool_expr THEN statements ELSE statements ENDIF .

    $default  reduce using rule 18 (statement)


State 149

   21 statement: FOR var ASSIGN NUMBER SEMICOLON bool_expr SEMICOLON . var ASSIGN expression BEGINLOOP statements ENDLOOP

    IDENT  shift, and go to state 44

    var  go to state 150


State 150

   21 statement: FOR var ASSIGN NUMBER SEMICOLON bool_expr SEMICOLON var . ASSIGN expression BEGINLOOP statements ENDLOOP

    ASSIGN  shift, and go to state 151


State 151

   21 statement: FOR var ASSIGN NUMBER SEMICOLON bool_expr SEMICOLON var ASSIGN . expression BEGINLOOP statements ENDLOOP

    MINUS   shift, and go to state 52
    LPAREN  shift, and go to state 71
    NUMBER  shift, and go to state 54
    IDENT   shift, and go to state 55

    expression           go to state 152
    multiplicative_expr  go to state 60
    term                 go to state 61
    num_term             go to state 62
    id_term              go to state 63
    var                  go to state 64


State 152

   21 statement: FOR var ASSIGN NUMBER SEMICOLON bool_expr SEMICOLON var ASSIGN expression . BEGINLOOP statements ENDLOOP

    BEGINLOOP  shift, and go to state 153


State 153

   21 statement: FOR var ASSIGN NUMBER SEMICOLON bool_expr SEMICOLON var ASSIGN expression BEGINLOOP . statements ENDLOOP

    IF        shift, and go to state 36
    WHILE     shift, and go to state 37
    DO        shift, and go to state 38
    FOR       shift, and go to state 39
    CONTINUE  shift, and go to state 40
    READ      shift, and go to state 41
    WRITE     shift, and go to state 42
    RETURN    shift, and go to state 43
    IDENT     shift, and go to state 44

    statements  go to state 154
    statement   go to state 46
    var         go to state 47


State 154

   21 statement: FOR var ASSIGN NUMBER SEMICOLON bool_expr SEMICOLON var ASSIGN expression BEGINLOOP statements . ENDLOOP

    ENDLOOP  shift, and go to state 155


State 155

   21 statement: FOR var ASSIGN NUMBER SEMICOLON bool_expr SEMICOLON var ASSIGN expression BEGINLOOP statements ENDLOOP .

    $default  reduce using rule 21 (statement)
